<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nginx服务搭建</title>
      <link href="/2020/08/06/linux/nginx%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/08/06/linux/nginx%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx服务搭建"><a href="#nginx服务搭建" class="headerlink" title="nginx服务搭建"></a>nginx服务搭建</h1><p>本篇文章主要介绍nginx服务的源码安装方法以及基于nginx不同方式的虚拟主机实现，安装nginx的源码包可以在nginx的<a href="https://www.nginx.org" target="_blank" rel="noopener">官网</a>去下载，目前最新的稳定版本是1.18版本。</p><pre class="line-numbers language-shell"><code class="language-shell">wget https://nginx.org/download/nginx-1.18.0.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1、安装nginx"><a href="#1、安装nginx" class="headerlink" title="1、安装nginx"></a>1、安装nginx</h2><p>（1）    首先在安装nginx之前先安装程序所需要的一些必备软件包</p><pre class="line-numbers language-shell"><code class="language-shell">yum -y install gcc gcc-c++ pcre-devel zlib-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    解压之前下载好的nginx源码包，准备开始编译安装</p><pre class="line-numbers language-shell"><code class="language-shell">tar -zxvf nginx-1.18.0.tar.gz -C /usr/src/            #解压cd /usr/src/nginx-1.18.0/                #进入解压目录准备编译安装./configure --prefix=/usr/local/nginx --user=www --group=www --with-http_stub_status_module --with-http_gzip_static_module --with-openssl=/usr/                #预编译，可使用"echo $?"查看过程是否有报错make && make install        #编译安装#编译安装完成后可以创建对应的nginx网站用户useradd -M -s /usr/sbin/nologin www<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）    将文件做软连接，时“nginx”命令生效</p><pre class="line-numbers language-shell"><code class="language-shell">ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试软连接是否生效，可以使用“<strong>nginx -t</strong>”命令，如果输出如下内容则表示命令生效：</p><pre class="line-numbers language-shell"><code class="language-shell">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is oknginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之后便可以启动nginx服务，并查看服务是否正常启动</p><pre class="line-numbers language-shell"><code class="language-shell">nginxnetstat -anpt |grep nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（4）    创建服务启动脚本</p><p>因为nginx默认是没有服务启动脚本的，启动之后需要用“<strong>kill</strong>”命令来杀掉进程，因此我们可以手动编写一个服务启动脚本并添加到系统服务中去，服务脚本如下：</p><pre class="line-numbers language-shell"><code class="language-shell">vim /etc/init.d/nginx                    #创建服务启动脚本文件#文件内容如下：#!/bin/bash#chkconfig:- 99 20#description:startup for nginxPROG='/usr/local/nginx/sbin/nginx'                #执行文件位置，用来启动服务PIDF='/usr/local/nginx/logs/nginx.pid'            #nginx进程文件，服务打开创建，关闭删除case "$1" in    start)                #开启服务        $PROG        echo $(netstat -anpt |grep nginx)        ;;    stop)                #关闭服务        kill -s QUIT $(cat $PIDF)        ;;    restart)            #重启服务        kill -s QUIT $(cat $PIDF)        $PROG        ;;    reload)                #重新加载服务        kill -s HUB $(cat $PIDF)        ;;    *)        echo 'Usage:$0{start | stop | restart | reload}'        #命令错误提示        exit 1esacexit 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后给创建的nginx服务启动文件添加可执行权限，便可以使用“<strong>service</strong>”命令来验证启动关闭服务了；</p><pre class="line-numbers language-shell"><code class="language-shell">chmod a+x /etc/init.d/nginxservice nginx start|restart|stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>至此，nginx服务安装就算是完成了，接下来就要开始了解和配置nginx的配置文件了。</p><h2 id="2、nginx配置文件"><a href="#2、nginx配置文件" class="headerlink" title="2、nginx配置文件"></a>2、nginx配置文件</h2><p>配置文件路径：nginx配置文件在安装目录下的conf目录中，如下：</p><blockquote><p>/usr/local/nginx/conf/nginx.conf                #/usr/local/nginx为我的安装目录</p></blockquote><p>nginx的配置文件使用<strong>http{ }</strong>界定标记，包括访问日志、HTTP端口、网页记录、默认字符集、连接保持，以及虚拟Web主机、PHP解析等一系列设置，其中大部分配置语句都包含在子界定标记<strong>server{ }</strong>内；如下为源码安装nginx后默认的配置文件</p><pre class="line-numbers language-shell"><code class="language-shell">#user  nobody;            #网站用户worker_processes  1;                #进程数events {    worker_connections  1024;                    #允许连接数}http {    include       mime.types;    default_type  application/octet-stream;    sendfile        on;                #允许发送文件    keepalive_timeout  65;                #超时时间    server {        listen       80;                #默认监听端口        server_name  localhost;            #网站名称，域名        location / {                    #根目录配置            root   html;                #网站根目录的位置            index  index.html index.htm;    #默认首页        }        error_page   500 502 503 504  /50x.html;    #服务器内部错误的反馈页面        location = /50x.html {            #内部错误页面配置            root   html;        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里只是简单介绍一下nginx的配置文件，当然里面还涉及到很多包括各种代理的配置，留到后面介绍。</p><p>默认网站站点目录为服务安装目录下的<strong>html</strong>目录：</p><blockquote><p>/usr/local/nginx/html</p></blockquote><p>此时开启服务后便可通过浏览器访问服务器的80端口，页面会显示如下字样，这是默认站点目录下的index.html文件的内容：</p><pre><code>Welcome to nginx!If you see this page, the nginx web server is successfully installed and working. Further configuration is required.For online documentation and support please refer to nginx.org.Commercial support is available at nginx.com.Thank you for using nginx.</code></pre><h2 id="3、开启nginx末节"><a href="#3、开启nginx末节" class="headerlink" title="3、开启nginx末节"></a>3、开启nginx末节</h2><p>修改配置文件，在<strong>server{}</strong>中添加如下内容：</p><pre class="line-numbers language-shell"><code class="language-shell">location /status {            stub_status on;            access_log off;         }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后重启服务，用浏览器访问<strong>/status</strong>即可看到当前服务器的一些连接信息，如：</p><pre class="line-numbers language-shell"><code class="language-shell">http://192.168.111.222/status#下面时网页信息Active connections: 2 server accepts handled requests 5 5 34 Reading: 0 Writing: 1 Waiting: 1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux网络服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Samba服务搭建</title>
      <link href="/2020/08/05/linux/Samba%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/08/05/linux/Samba%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Samba服务搭建"><a href="#Samba服务搭建" class="headerlink" title="Samba服务搭建"></a>Samba服务搭建</h1><h2 id="1、Samba服务简介"><a href="#1、Samba服务简介" class="headerlink" title="1、Samba服务简介"></a>1、Samba服务简介</h2><p>Samba是Linux和UNIX系统上实现SMB协议的一个免费软件，标准的C/S架构。通过设置NetBIOS over tcp/ip使得Samba不但能与局域网主机分享资源，而且还能与全世界电脑分享资源。</p><p>在windows网络中，主机的数据共享是通过微软的SMB/CIFS网络协议。都是微软私有协议。</p><p>SMB协议（server messages block）：服务消息块，是一种在局域网上共享文件和打印机的一种通讯协议。它为局域网内的不同计算机之间提供文件及打印机等资源的共享服务。</p><p>CIFS协议（common internet file system）：通用互联网文件系统。</p><h2 id="2、Samba主要依赖"><a href="#2、Samba主要依赖" class="headerlink" title="2、Samba主要依赖"></a>2、Samba主要依赖</h2><p>samba-common:主要提供samba服务器的设置文件与设置文件的语法校验程序testparm</p><p>samba-client：客户端</p><p>samba4-libs：状态库文件</p><p>samba-winbind：作为windows域成员的一个中介，它可以把windows域账号里的用户和组信息映射成Linux用户。</p><h2 id="3、Samba的安装"><a href="#3、Samba的安装" class="headerlink" title="3、Samba的安装"></a>3、Samba的安装</h2><p>Samba服务的安装方式有很多，可以使用rpm包安装，也可以直接使用yum安装，由于rpm包的安装方式需要解决的依赖关系太多，而且libwbclient在本地挂载光盘的Packages目录中不存在，不能很好的解决以来问题，所以本次记录就直接使用yum安装。</p><pre class="line-numbers language-shell"><code class="language-shell">yum -y install samba<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装结束后可以看到samba的版本号</p><blockquote><p>samba.x86_64 0:4.8.3-4.el7 </p></blockquote><h2 id="4、Samba服务主要程序及文件"><a href="#4、Samba服务主要程序及文件" class="headerlink" title="4、Samba服务主要程序及文件"></a>4、Samba服务主要程序及文件</h2><p>服务：</p><blockquote><p>smbd:提供对服务器中文件/打印资源的共享访问，端口号：T445</p><p>nmbd:netbios,提供基于NetBIOS主机名称的解析，端口号：U137-138</p></blockquote><p>服务脚本：</p><blockquote><p>/etc/init.d/smb</p></blockquote><p>配置文件及目录：</p><blockquote><p>/etc/samba</p><p>/etc/samba/smb.conf</p></blockquote><p>配置文件检查工具：testparm</p><p>配置完成后可以使用”<strong>service smb start|restart|stop</strong>“命令开开启、重启、关闭服务</p><h2 id="5、搭建匿名用户samba服务器"><a href="#5、搭建匿名用户samba服务器" class="headerlink" title="5、搭建匿名用户samba服务器"></a>5、搭建匿名用户samba服务器</h2><p>（1）    编辑配置文件，（可以参考smb.conf.example来配置）设置安装全级别为匿名用户，配置如下：</p><pre class="line-numbers language-shell"><code class="language-shell">[global]        workgroup = MYGROUP                        #工作组        server string = Samba Server Version %v        #显示信息        security = SHARE                #安全级别，share代表匿名用户        log file = /var/log/samba/log.%m    #日志文件路径        max log size = 50                #最大日志文件大小        client signing = required        #客户端登录        idmap config * : backend = tdb                cpus options =raw        [disk1]                            #共享目录信息        comment = for disk1            #介绍        path = /disk1            #共享目录路径        read only = NO            #匿名用户可写            guest ok = YES            #匿名用户可以访问[disk2]        comment = for disk2        path = /disk2        guest ok = YES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）    将共享目录的权限增大</p><pre class="line-numbers language-shell"><code class="language-shell">chmod a+w /disk1chmod a+w /disk2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）    测试，在Windows下运行“<strong>\\服务器IP</strong>”</p><p><strong>注意</strong>：在samba4版本中security不在支持share，因此在global配置中如果配置了share，检查配置的时候不会通过；“<strong>security=share</strong>”被取而代之的是：</p><pre class="line-numbers language-shell"><code class="language-shell">security = usermap to guest = Bad User<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6、搭建用户映射samba服务器"><a href="#6、搭建用户映射samba服务器" class="headerlink" title="6、搭建用户映射samba服务器"></a>6、搭建用户映射samba服务器</h2><p>/etc/samba/smbuser –&gt;共享账号的映射文件–&gt;别名</p><p>（1）    创建映射用户</p><pre class="line-numbers language-shell"><code class="language-shell">useradd zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    启用别名，编辑/etc/samba/smbuser文件</p><pre class="line-numbers language-shell"><code class="language-shell">zhangsan = zs ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）    启用映射账户文件，修改主配置文件，在global中添加如下内容</p><pre class="line-numbers language-shell"><code class="language-shell">username map = /etc/samba/smbusers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还可以做用户限制，在主配置文件<strong>[global]</strong>中添加</p><pre class="line-numbers language-shell"><code class="language-shell">hosts allow = ip地址            #表示允许访问的地址/网段<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（4）    可以使用smb客户端访问，首先需要安装客户端</p><pre class="line-numbers language-shell"><code class="language-shell">yum -y install samba-clientsmbclient -L samba服务器IP            #查询服务器上的匿名共享资源列表smbclient //服务器IP/share（共享目录名字）         #samba客户端访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>同时在Linux系统上还可以使用<strong>mount</strong>命令挂载共享资源列表。</p>]]></content>
      
      
      <categories>
          
          <category> Linux网络服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache web服务搭建</title>
      <link href="/2020/08/04/linux/Apache-web%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/08/04/linux/Apache-web%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Apache-WEB服务搭建"><a href="#Apache-WEB服务搭建" class="headerlink" title="Apache WEB服务搭建"></a>Apache WEB服务搭建</h1><p>万维网（world wide web，www）服务器，也称之为web服务器，主要功能是提供网上信息浏览服务。WWW是Internet的多媒体信息查询工具，是Internet上飞速发展的服务，也是目前使用最为广泛的服务。正是因为有了www软件，才使得近年来Internet的迅速发展。</p><p>目前主流的web服务器软件包括：Apache、nginx、lighttpd、IIS、resin、tomcat、weblogic、jetty等。</p><h2 id="1、Apache-WEB服务简介"><a href="#1、Apache-WEB服务简介" class="headerlink" title="1、Apache WEB服务简介"></a>1、Apache WEB服务简介</h2><p>Apache HTTP Server是Apache软件基金会的一个开源的网页服务器，是世界上使用排名第一的web服务器软件，可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台性和安全性被广泛使用，是目前最流行的web服务端软件之一。</p><p>apache服务是一个多模块化的服务，经过多次修改，成为目前世界使用排名第一的Web服务器软件。Apache取自“A Patchy Server”的读音，即充满补丁的服务器，因为Apache基于GPL发布，大量开发者不断为Apache贡献新的代码、功能、新的特性、修改原来的缺陷。</p><p>Apache服务器的特点是使用简单、速度快、性能稳定，可以做负载均衡及<a href="http://baike.baidu.com/view/751.htm" target="_blank" rel="noopener">代理服务器</a>来使用。</p><p>Apache WEB服务器有三种处理模式：Prefork MPM、Worker MPM、Event MPM。由于第三种模式不支持https，因此在企业中使用的频率也是最少的。</p><h3 id="1-1、Prefork-MPM模式"><a href="#1-1、Prefork-MPM模式" class="headerlink" title="1.1、Prefork MPM模式"></a>1.1、Prefork MPM模式</h3><p>默认Apache处理模式为Prefork MPM方式（预派生模式），Prefork采用预派生子进程方式，Prefork用单独的子进程来处理不同的请求，进程之间是彼此独立的，所以比较稳定。</p><p>Prefork的工作原理是：控制进程Master在最初建立“Start Servers”个进程后，为了满足MinSpareServers设置的最小空闲进程，所以需要创建第一个空闲进程，等待一秒钟，继续创建两个，再等待一秒钟，继续创建四个，一次按照递增指数级创建进程数，最多每秒同时创建32个空闲进程，直到满足至少有MinSpareServers设置的值为止。</p><p>Apache的预派生模式不必在请求到来时再产生新的进程，从而减小了系统开销以增加性能，不过由于Prefork MPM引擎是基于多进程方式提供对外服务，每个进程占内存也相对较高。</p><h3 id="1-2、Worker-MPM模式"><a href="#1-2、Worker-MPM模式" class="headerlink" title="1.2、Worker MPM模式"></a>1.2、Worker MPM模式</h3><p>相对于预派生模式，Worker方式是2.0版本中全新的支持多线程和多进程混合模式的MPM，由于使用线程来处理，所以可处理海量的http请求，而系统资源的开销要小于基于Prefork多进程的方式。Worker也是基于多进程，但每个进程又生成多个线程，这样可以保证多线程可以获得进程的稳定性。</p><p>Worker工作原理：控制进程Master在最初建立“StartServers”个进程，每个进程会创建ThreadsPerChild设置的线程数，多个线程共享该内存空间，同时每个线程独立地处理用户的http请求，为了不在请求到来时再生成线程，Worker也可以设置最大最小空闲线程。</p><p>Worker模式下同时处理的请求总数=进程总数 x ThreadsPerChild，也即等于MaxClients。如果服务器负载很高，当前进程数不满足需求，Master控制进程会fork新的进程，最大进程数不能超过ServerLimit数，如果需要调整StartServers进程数，需同时调整ServerLimit的值。</p><p><strong>Prefork与Worker的区别</strong>：</p><ul><li>Prefork MPM模式：使用多个进程，每个进程只有一个线程，每个进程在某个确定的时间只能维持一个连接，稳定，内存开销较高；</li><li>Worker MPM模式：使用多个进程，每个子进程包含多个线程，每个线程在某个确定的时间只能维持一个连接，内存占用量比较小，适合大并发、高流量的WEB服务器。Worker MPM缺点是一个线程崩溃，整个进程就会连同其任何线程一起挂掉。</li></ul><h2 id="2、Apache-WEB服务的安装"><a href="#2、Apache-WEB服务的安装" class="headerlink" title="2、Apache WEB服务的安装"></a>2、Apache WEB服务的安装</h2><p>Apache web服务的安装方式有很多，可以直接使用yum安装，也可以使用源码安装，源码安装步骤如下：</p><p>（1）    首先从Apache官方分站点下载源码包，目前版本为2.4版本</p><pre class="line-numbers language-shell"><code class="language-shell">wget https://mirror.bit.edu.cn/apache/httpd/httpd-2.4.43.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    解压源码包至指定目录，并安装编译环境</p><pre class="line-numbers language-shell"><code class="language-shell">tar -zxf httpd-2.4.43.tar.gz -C /usr/local/yum -y install gcc gcc-c++ make<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）    进入解压目录开始编译安装</p><pre class="line-numbers language-shell"><code class="language-shell">#预编译，启用rewrite规则、启用动态加载库、开启Apache三种工作引擎./configure  --prefix=/usr/local/httpd  --enable-so  --enable-rewrite  --enable-charset-lite  --enable-cgi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在预编译时报错：没有APR</p><pre class="line-numbers language-shell"><code class="language-shell">configure: checking for APR... noconfigure: error: APR not found.  Please read the documentation.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>根据报错信息，安装apr，再次预编译（相应的如果在预编译过程中报错提示没有XX环境时采用yum方式安装即可）</p><pre class="line-numbers language-shell"><code class="language-shell">yum -y install apr*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（4）    预编译成功后，编译安装安装（可以通过”<strong>echo $?</strong>“命令判断是否成功，输出为零即为成功）</p><pre class="line-numbers language-shell"><code class="language-shell">make && make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（5）    安装成功后启动apache服务，临时关闭selinux和防火墙</p><pre class="line-numbers language-shell"><code class="language-shell">/usr/local/http/bin/apachectl startsetenforce 0systemctl  stop   firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此时通过浏览器访问服务器的80端口返回“<strong>It works！</strong>”则表示服务安装并启动成功，后续可以优化服务执行路径并添加httpd系统服务。</p><p>（6）    优化执行路径</p><pre class="line-numbers language-shell"><code class="language-shell">ln -s /usr/local/httpd/bin/* /usr/local/binhttpd -v = /usr/local/httpd/bin/httpd -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（7）    添加httpd系统服务</p><pre class="line-numbers language-shell"><code class="language-shell">cp /usr/local/httpd/bin/apachectl /etc/init.d/httpd    #添加服务执行脚本到系统服务vi /etc/init.d/httpd                #编辑服务执行文件#新增如下内容：#chkconfig: 35 85 15#description:startup for httpd servechkconfig --add httpd         #将httpd服务添加到chkconfig列表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、apache目录结构及配置文件"><a href="#3、apache目录结构及配置文件" class="headerlink" title="3、apache目录结构及配置文件"></a>3、apache目录结构及配置文件</h2><h3 id="3-1、目录结构"><a href="#3-1、目录结构" class="headerlink" title="3.1、目录结构"></a>3.1、目录结构</h3><p><strong>源码安装</strong>：</p><ul><li>/usr/local/httpd/config/httpd.conf      主配置文件目录</li><li>/usr/local/httpd/bin                Apache命令目录；</li><li>/usr/local/httpd/bin/apachectl     服务脚本 </li><li>/usr/local/httpd/bin/httpd         执行程序</li><li>/usr/local/httpd/build             Apache构建编译目录；</li><li>/usr/local/httpd/htdocs/            源码安装Apache网站发布目录；</li><li>/usr/local/httpd/cgi-bin             可执行的CGI程序存放目录；</li><li>/usr/local/httpd/include            Apache引用配置文件目录；</li><li>/usr/local/httpd/logs               Apache日志目录；</li><li>/usr/local/httpd/man               Apache帮助文档目录；</li><li>/usr/local/httpd/manual            Apache手册；</li><li>/usr/local/httpd/modules           Apache模块路径。</li></ul><p><strong>yum安装</strong>：</p><ul><li>/usr/lib64/httpd/modules/             Apache模块存放路径；</li><li>/var/www/html/                  YUM安装Apache网站发布目录；</li><li>/var/www/error/                  服务器设置错误信息，浏览器显示；</li><li>var/www/icons/                  Apache小图标文件存放目录；</li><li>var/www/cgi-bin/                    可执行的CGI程序存放目录。</li><li>/var/log/httpd/                      Apache日志目录；</li><li>/usr/sbin/apachectl                   Apache启动脚本；</li><li>/usr/sbin/httpd                      Apache二进制执行文件；</li><li>/usr/bin/htpasswd                    设置Apache目录密码访问；</li></ul><h3 id="3-2、常用的全局配置参数"><a href="#3-2、常用的全局配置参数" class="headerlink" title="3.2、常用的全局配置参数"></a>3.2、常用的全局配置参数</h3><p>该参数是针对apache服务配置文件httpd.conf</p><pre class="line-numbers language-shell"><code class="language-shell">ServerRoot                #服务目录ServerAdmin                #管理员邮箱User                    #运行服务的用户身份Group                    #运行服务的组身份ServerName                #网站服务器的域名DocumentRoot            #网页文档的根目录Listen                    #监听的IP地址、端口号PidFile                    #保存httpd进程PID号的文件DirectoryIndex            #默认的索引页文件ErrorLog                #错误日志文件的位置CustomLog                #访问日志文件的位置LogLevel                #记录日志的级别，默认为warnTimeout                    #网络连接超时，默认为300秒KeepAlive                #是否保持连接，可选On或OffMaxKeepAliveRequests    #每次连接最多请求文件数KeepAliveTimeout        #保持连接状态时的超时时间Include                    #需要包含进来的其他配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、部署AWStats分析系统"><a href="#4、部署AWStats分析系统" class="headerlink" title="4、部署AWStats分析系统"></a>4、部署AWStats分析系统</h2><p>AWStats分析系统可以实时的监控网站的访问数、网页、文件等信息，部署步骤如下：</p><p>（1）    下载并解压AWStats软件包</p><pre class="line-numbers language-shell"><code class="language-shell">tar -zxf awstats-7.3.tar.gz    -C /usr/local/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    为站点设置配置文件</p><pre class="line-numbers language-shell"><code class="language-shell">cd /usr/local/awstats/tools            #进入/awstats/tools目录chmod +x awstats_configure.pl        #给该执行文件添加权限./awstats_configure.pl                #执行交互式配置过程#之后进入交互式界面配置，需要配置的是apache的配置文件路径和监控站点的域名，其余的按“Y”或者回车即可#监控站点的域名需要在httpd.conf文件中配置好，即“ServerName”的值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）    修改站点统计配置文件</p><pre class="line-numbers language-shell"><code class="language-shell">cd /etc/awstats                #上面的交互式配置默认会创建一个站点统计配置文件/etc/awstats/awstats.域名.conf，如“awstats.www.test.com.conf”vim /etc/awstats/awstats.www.test.com.conf#更改如下内容LogFile= "/usr/local/httpd/log/access_lofg"        #更改日志目录DirData="/var/lib/awstats"                        #更改目录数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）    因为上一步配置中的目录数据目录不存在，因此需要创建该目录</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir /var/lib/awstats<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（5）    执行日志分析，并建立计划任务</p><pre class="line-numbers language-shell"><code class="language-shell">chmod +x /usr/local/awstats/tools/awstats_updateall.pl    #为改文件增加执行权限./awstats_updateall.pl now                            #执行更新操作crontab -e            #创建计划任务，执行更新操作（每十分钟更新一次）*/10 * * * * /usr/local/awstats/tools/awstats_updateall.pl now/etc/init.d/crond start           #执行计划任务chkconfig --level 35 crond on         #开机启动crond<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（6）    配置完上述步骤，就可以开始访问awstats分析系统了，使用浏览器输入：[http://服务器IP/awsts/awsts.pl?config=网站域名] 即可，也可以建立自动跳转页面：”/usr/local/httpd/htdocs/aws.html”，然后直接访问 [http://服务器IP/aws.html]即可，html配置如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span>refresh</span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0;url<span class="token punctuation">=</span>http://服务器IP/awstats/awstats.pl?config<span class="token punctuation">=</span>网站域名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、Apache虚拟主机企业应用"><a href="#5、Apache虚拟主机企业应用" class="headerlink" title="5、Apache虚拟主机企业应用"></a>5、Apache虚拟主机企业应用</h2><p>企业真实环境中，一台WEB服务器发布单个网站会非常浪费资源，所以一台WEB服务器上会发布多个网站，少则3-5个，多则2-30个网站。</p><p>在一台服务器上发布多网站，也称之为部署多个虚拟主机，WEB虚拟主机配置方法有三种：</p><ul><li>基于单IP多个Socket端口；</li><li>基于多IP地址一个端口；</li><li>基于单IP一个端口不同域名。</li></ul><h3 id="5-1、基于同一端口不同域名"><a href="#5-1、基于同一端口不同域名" class="headerlink" title="5.1、基于同一端口不同域名"></a>5.1、基于同一端口不同域名</h3><p>基于同一端口不同域名的方式在企业中得到广泛的使用和应用，如下为基于一个端口不同域名，在一台Apache WEB服务器上部署多个网站，步骤如下：</p><p>（1）    创建虚拟主机配置文件httpd-vhosts.conf，该文件默认已存在，只需去掉httpd.conf配置文件中虚拟主机配置前的#号即可，</p><pre class="line-numbers language-shell"><code class="language-shell">Include conf/extra/httpd-vhosts.conf            #第485行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    配置文件/usr/local/apache2/conf/extra/httpd-vhosts.conf中代码设置为如下：</p><pre class="line-numbers language-shell"><code class="language-shell">NameVirtualHost *:80                #开启虚拟主机，并且监听本地所有网卡接口的80端口；<VirtualHost *:80>                    #虚拟主机配置起始；    ServerAdmin                     #管理员邮箱；    DocumentRoot "/usr/local/apache2/htdocs/test1"        #该虚拟主机发布目录；；    ServerName www.test1.com            #虚拟主机完整域名；    ErrorLog "logs/www.test1.com_error_log"            #错误日志路径及文件名；    CustomLog "logs/www.test1.com_access_log" common        #访问日志路径及文件名；</VirtualHost>                #虚拟主机配置结束。<VirtualHost *:80>    ServerAdmin     DocumentRoot "/usr/local/apache2/htdocs/test2"    ServerName www.test2.com    ErrorLog "logs/www.test2.com_error_log"    CustomLog "logs/www.test2.com_access_log" common</VirtualHost><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）    创建测试域名发布目录，重启apache服务，并分别创建index.html页面：</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir  -p  /usr/local/httpd/htdocs/{test1,test2}//usr/local/httpd/bin/apachectl restartecho  "<h1> www.test1.com  Pages</h1>" >/usr/local/httpd/htdocs/test1/index.htmlecho  "<h1> www.test2.com  Pages</h1>" >/usr/local/httpd/htdocs/test2/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（4）    Windows客户端设置Hosts映射，将两个测试域名与服务器 IP进行映射绑定，映射的目的将域名跟IP进行绑定，在浏览器可以输入域名，不需要输入IP地址，绑定方法是在“C:\Windows\System32\drivers\etc”文件夹中，使用记事本编辑hosts文件，加入如下代码：</p><pre class="line-numbers language-shell"><code class="language-shell">服务器IP  www.test1.com服务器IP  www.test2.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（5）    此时，便可通过浏览器访问不同的域名实现apache基于多域名配置虚拟主机，如果还需添加虚拟主机，直接拷贝其中一个虚拟主机配置、修改WEB发布目录即可。</p><h3 id="5-2、基于多IP的同一端口"><a href="#5-2、基于多IP的同一端口" class="headerlink" title="5.2、基于多IP的同一端口"></a>5.2、基于多IP的同一端口</h3><p>基于多IP的同一端口方式需要服务器的配置多张网卡，具体配置方法如下：</p><p>（1）     在/usr/local/httpd/htdoc/目录下创建两个文件夹，test1，test2</p><p>（2）    在test1和test2中创建不同的主页index.html</p><p>（3）    编辑主配置文件httpd.conf，添加如下内容：</p><pre class="line-numbers language-shell"><code class="language-shell"><VirtualHost 192.168.8.45>    DocumentRoot /usr/local/httpd/htdocs/test1    ServerName www.test1.com    ErrorLog logs/www.test1.com.error_log    Customlog logs/www.test1.com.access_log common</VirtualHost><VirtualHost 192.168.8.47>    DocumentRoot /usr/local/httpd/htdocs/test2    ServerName www.test2.com    ErrorLog logs/www.test2.com.error_log    Customlog logs/www.test2.com.access_log common</VirtualHost><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）    重启httpd服务，通过浏览器访问不同的IP地址验证是否成功。</p><h3 id="5-3、基于端口"><a href="#5-3、基于端口" class="headerlink" title="5.3、基于端口"></a>5.3、基于端口</h3><p>基于端口的配置方式相对与上述基于多IP较简单，这种方式不需要多张网卡，只需要在上述基于多IP的基础上修改一下主配置文件，如下所示：</p><pre class="line-numbers language-shell"><code class="language-shell"><VirtualHost 192.168.8.45:80>                #需要配置端口    DocumentRoot /usr/local/httpd/htdocs/test1    ServerName www.test1.com    ErrorLog logs/www.test1.com.error_log    Customlog logs/www.test1.com.access_log common</VirtualHost><VirtualHost 192.168.8.45:8080>                #同一IP不同端口    DocumentRoot /usr/local/httpd/htdocs/test2    ServerName www.test2.com    ErrorLog logs/www.test2.com.error_log    Customlog logs/www.test2.com.access_log common</VirtualHost><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后重启服务，在浏览器通过同一IP不同端口访问验证即可。</p><h2 id="6、配置文件详解"><a href="#6、配置文件详解" class="headerlink" title="6、配置文件详解"></a>6、配置文件详解</h2><p>Apache的配置文件是Apache WEB难点，只有掌握配置文件中每个参数的含义，才能理解并在日常运维中去解决Apache遇到的故障，如下为Apache配置文件详解：</p><pre class="line-numbers language-shell"><code class="language-shell">ServerTokens OS                        #显示服务器的版本和操作系统内核版本；ServerRoot  "/usr/local/httpd/"         #Apache主配置目录；PidFile run/httpd.pid                    #PidFile进程文件；Timeout 60                            #不论接收或发送，当持续连接等待超过60秒则该次连接就中断；KeepAlive Off                            #关闭持续性的连接；MaxKeepAliveRequests 100                #当KeepAlive设置为On的时候，该数值可以决定此次连接能够传输的最大传输数量；KeepAliveTimeout 65                    #当KeepAlive设置为On的时候，该连接在最后一次传输后等待延迟的秒数；<IfModule prefork.c>                    #Prefork MPM引擎配置段；StartServers      8                    #默认启动Apache工作进程数；MinSpareServers   5                    #最小空闲进程数；MaxSpareServers   20                    #最大空闲进程数；ServerLimit      4096                    #Apache服务器最多进程数；MaxClients      4096                    #每秒支持的最大客户端并发；MaxRequestsPerChild  4000                #每个进程能处理的最大请求数；</IfModule><IfModule worker.c>                    #Worker MPM引擎配置段；StartServers        8                    #默认启动Apache工作进程数；MaxClients         4000                #每秒支持的最大客户端并发；MinSpareThreads     25                #最小空闲线程数；MaxSpareThreads     75                 #最小空闲线程数；ThreadsPerChild     75                #每个进程启动的线程数；MaxRequestsPerChild  0                #每个进程能处理的最大请求数，0表示无限制；</IfModule>LoadModule  mod_version.so              #静态加载apache相关模块；ServerAdmin support@jfedu.net            #管理员邮箱，网站异常，错误信息会发生至该邮箱；DocumentRoot   "/usr/local/httpd/htdocs/"  #Apache网站默认发布目录；<Directory "/data/webapps/www1">        #设置/data/webapps/www1目录权限；    AllowOverride All    Options -Indexes FollowSymLinks    Order allow,deny    Allow from all</Directory>AllowOverride                         #设置为None时，目录中.htaccess 文件将被完全忽略，当指令设置为All时，.htaccess文件生效；Options -Indexes FollowSymLinks        #禁止浏览目录，去掉”-“,表示浏览目录，常用于下载站点；Order     allow,deny                     #默认情况下禁止所有客户机访问；Order   deny,allow                     #默认情况下允许所有客户机访问；Allow   from all                    #允许所有客户机访问。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux网络服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vsftpd服务搭建</title>
      <link href="/2020/08/03/linux/Vsftpd%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/08/03/linux/Vsftpd%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Vsftpd服务搭建"><a href="#Vsftpd服务搭建" class="headerlink" title="Vsftpd服务搭建"></a>Vsftpd服务搭建</h1><h2 id="1、FTP协议简介"><a href="#1、FTP协议简介" class="headerlink" title="1、FTP协议简介"></a>1、FTP协议简介</h2><p>文件传输协议（File Transfer Protocol，FTP），基于该协议FTP客户端与服务端可以实现共享文件、上传文件、下载文件。 FTP 基于<a href="http://baike.baidu.com/subview/32754/8048820.htm" target="_blank" rel="noopener">TCP</a>协议生成一个虚拟的连接，主要用于控制FTP连接信息，同时再生成一个单独的TCP连接用于FTP<a href="http://baike.baidu.com/view/875888.htm" target="_blank" rel="noopener">数据传输</a>。用户可以通过客户端向FTP服务器端上传、下载、删除文件，FTP服务器端可以同时提供给多人共享使用。</p><p>FTP服务是Client/Server（简称C/S）模式，基于FTP协议实现FTP文件对外共享及传输的软件称之为FTP服务器源端，客户端程序基于FTP协议，则称之为FTP客户端，FTP客户端可以向FTP服务器上传、下载文件。</p><p><strong>FTP传输模式</strong>：</p><p>FTP基于C/S模式，FTP客户端与服务器端有两种传输模式，分别是FTP主动模式、FTP被动模式，主被动模式均是以FTP服务器端为参照。</p><ul><li>FTP<strong>主动</strong>模式：客户端从一个任意的端口N（N&gt;1024）连接到FTP服务器的port 21<strong>命令端口</strong>，客户端开始监听端口N+1，并发送FTP命令“port N+1”到FTP服务器，FTP服务器以<strong>数据端口</strong>（20）连接到客户端指定的数据端口（N+1）。</li><li>FTP<strong>被动</strong>模式：客户端从一个任意的端口N（N&gt;1024）连接到FTP服务器的port 21命令端口，客户端开始监听端口N+1，客户端提交 PASV命令，服务器会开启一个任意的端口（P &gt;1024），并发送PORT P命令给客户端。客户端发起从本地端口N+1到服务器的端口P的连接用来传送数据。</li></ul><h2 id="2、Vsftpd服务简介"><a href="#2、Vsftpd服务简介" class="headerlink" title="2、Vsftpd服务简介"></a>2、Vsftpd服务简介</h2><p>目前主流的FTP服务器端软件包括：Vsftpd、ProFTPD、PureFTPd、Wuftpd、Server-U FTP、 FileZilla Server等软件，其中Unix/Linux使用较为广泛的FTP服务器端软件为Vsftpd 。</p><p>非常安全的FTP服务进程（Very Secure FTP daemon，Vsftpd），Vsftpd在Unix/<a href="http://www.ha97.com/category/linux" target="_blank" rel="noopener">Linux</a>发行版中最主流的FTP服务器程序，优点小巧轻快，安全易用、稳定高效、满足企业跨部门、多用户的使用（1000用户）等。</p><p>Vsftpd基于GPL开源协议发布，在中小企业中得到广泛的应用，Vsftpd可以快速上手，基于Vsftpd虚拟用户方式，访问验证更加安全。Vsftpd还可以基于MYSQL数据库做安全验证，多重安全防护。</p><h2 id="3、Vsftpd服务安装配置"><a href="#3、Vsftpd服务安装配置" class="headerlink" title="3、Vsftpd服务安装配置"></a>3、Vsftpd服务安装配置</h2><p>Vsftpd服务器端安装有两种方法，一是基于YUM方式安装，二是基于源码编译安装，最终实现效果完全一致，本文采用YUM安装Vsftpd，步骤如下：</p><p>(1)    在命令行执行如下命令：</p><pre class="line-numbers language-shell"><code class="language-shell">yum -y install vsftpd*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)    打印vsftpd安装后的配置文件路径、启动Vsftpd服务及查看进程是否启动：</p><pre class="line-numbers language-shell"><code class="language-shell">rpm   -ql    vsftpd|moresystemctl  restart  vsftpd.serviceps  -ef |grep  vsftpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>注</strong>：采用yum方式安装vsftpd服务，默认安装位置为/etc/vsftpd</p><p>目录结构如下：</p><ul><li>/etc/vsftpd/ftpusers</li><li>/etc/vsftpd/user_list</li><li>/etc/vsftpd/vsftpd.conf</li><li>/etc/vsftpd/vsftpd_conf_migrate.sh</li></ul><p>(3)    vsftpd.conf默认配置文件详解如下：</p><pre class="line-numbers language-shell"><code class="language-shell">anonymous_enable=YES        开启匿名用户访问；local_enable=YES                启用本地系统用户访问；write_enable=YES                本地系统用户写入权限；local_umask=022                本地用户创建文件及目录默认权限掩码；dirmessage_enable=YES        打印目录显示信息，通常用于用户第一次访问目录时，信息提示；xferlog_enable=YES            启用上传/下载日志记录；    connect_from_port_20=YES    FTP使用20端口进行数据传输；xferlog_std_format=YES        日志文件将根据xferlog的标准格式写入；listen=NO                    Vsftpd不以独立的服务启动，通过Xinetd服务管理，建议改成YES；listen_ipv6=YES                启用IPV6监听；pam_service_name=vsftpd        登录FTP服务器，依据/etc/pam.d/vsftpd中内容进行认证；userlist_enable=YES            vsftpd.user_list和ftpusers配置文件里用户禁止访问FTP；tcp_wrappers=YES                设置vsftpd与tcp wrapper结合进行主机的访问控制，Vsftpd服务器检查/etc/hosts.allow 和/etc/hosts.deny中的设置，来决定请求连接的主机，是否允许访问该FTP服务器。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(4)    启动Vsftpd服务后，通过Windows客户端资源管理器访问Vsftp服务器端</p><pre class="line-numbers language-shell"><code class="language-shell">ftp://192.168.111.222    #直接使用ftp命令跟上服务端IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>默认开启文件共享目录为：/var/ftp/pub</p><p>且默认采用ftp主动模式，设置为被动模式使用端口方法如下：</p><pre class="line-numbers language-shell"><code class="language-shell">vim /etc/vsftpd/vsftpd.confpasv_enable=YESpasv_min_port=60000pasv_max_port=60100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1、vsftpd匿名用户配置"><a href="#3-1、vsftpd匿名用户配置" class="headerlink" title="3.1、vsftpd匿名用户配置"></a>3.1、vsftpd匿名用户配置</h3><p>Vsftpd默认以匿名用户访问，匿名用户默认访问的FTP服务器端路径为：/var/ftp/pub，匿名用户<strong>只有查看权限</strong>，无法创建、删除、修改。如需关闭FTP匿名用户访问，需修改配置文件/etc/vsftpd/vsftpd.conf，将anonymous_enable=YES修改为anonymous_enable=NO，重启Vsftpd服务即可。</p><p>如果允许匿名用户能够上传、下载、删除文件，需在/etc/vsftpd/vsftpd.conf配置文件中加入如下代码：</p><pre class="line-numbers language-shell"><code class="language-shell">anon_upload_enable=YES              允许匿名用户上传文件；anon_mkdir_write_enable=YES         允许匿名用户创建目录；anon_other_write_enable=YES         允许匿名用户其他写入权限。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>匿名用户完整vsftpd.conf配置文件代码如下：</p><pre class="line-numbers language-shell"><code class="language-shell">anonymous_enable=YESlocal_enable=YESwrite_enable=YESlocal_umask=022anon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESdirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时，由于默认Vsftpd匿名用户有两种：anonymous、ftp，所以匿名用户如果需要上传文件、删除及修改等权限，需要ftp用户对/var/ftp/pub目录有写入权限，使用如下chown和chmod任意一种即可，设置命令如下：</p><pre class="line-numbers language-shell"><code class="language-shell">chown     -R    ftp        /var/ftp/pub/chmod          o+w     /var/ftp/pub/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如上Vsftpd.conf配置文件配置完毕，同时权限设置完，重启vsftpd服务即可，通过Windows客户端访问，能够上传文件、删除文件、创建目录等操作。</p><h3 id="3-2、vsftpd系统用户配置"><a href="#3-2、vsftpd系统用户配置" class="headerlink" title="3.2、vsftpd系统用户配置"></a>3.2、vsftpd系统用户配置</h3><p>Vsftpd匿名用户设置完毕，匿名用户，任何人都可以查看FTP服务器端的文件、目录，甚至可以修改、删除，此方案如适合存放私密文件在FTP服务器端，如何保证文件或者目录专属拥有者呢，Vsftpd系统用户可以实现该需求。</p><p>实现Vsftpd系统用户方式验证，只需在Linux系统中创建多个用户即可，创建用户使用useradd，同时给用户设置密码，即可通过用户和密码登录FTP，进行文件上传、下载、删除等操作。Vsftpd系统用户实现方法步骤如下：</p><p>（1）    Linux系统中创建系统用户testftpduser1、testftpduser1，分别设置密码为123456：</p><pre class="line-numbers language-shell"><code class="language-shell">useradd   testftpduser1useradd   testftpduser2echo 123456|passwd --stdin  testftpduser1echo 123456|passwd --stdin  testftpduser2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（2）    修改vsftpd.conf配置文件代码如下：</p><pre class="line-numbers language-shell"><code class="language-shell">anonymous_enable=NOlocal_enable=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）    通过Windows资源客户端验证，使用testftpduser1、testftpduser2用户登录FTP服务器，即可上传文件、删除文件、下载文件，testftpduser1、testftpduser2系统用户上传文件的家目录在/home/testftpduser1、/home/testftpduser2下。</p><h3 id="3-3、vsftpd虚拟用户配置"><a href="#3-3、vsftpd虚拟用户配置" class="headerlink" title="3.3、vsftpd虚拟用户配置"></a>3.3、vsftpd虚拟用户配置</h3><p>如果基于Vsftpd系统用户访问FTP服务器，系统用户越多越不利于管理，而且不利于系统安全管理，鉴于此，为了能更加的安全使用VSFTPD，需使用Vsftpd虚拟用户方式。</p><p>Vsftpd虚拟用户原理：虚拟用户就是没有实际的真实系统用户，而是通过映射到其中一个真实用户以及设置相应的权限来实现访问验证，虚拟用户不能登录Linux系统，从而让系统更加的安全可靠。</p><p>Vsftpd虚拟用户企业案例配置步骤如下：</p><p>（1）    安装Vsftpd虚拟用户需用到的软件及认证模块：</p><pre class="line-numbers language-shell"><code class="language-shell">yum  -y  install  pam*  libdb-utils  libdb*  --skip-broken<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    创建虚拟用户临时文件/etc/vsftpd/ftpusers.txt，新建虚拟用户和密码，其中virtualuser1、virtualuser2为虚拟用户名，123456为密码，如果有多个用户，依次格式填写即可：</p><pre class="line-numbers language-shell"><code class="language-shell">virtualuser1123456virtualuser2123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（3）    生成Vsftpd虚拟用户数据库认证文件，设置权限700：</p><pre class="line-numbers language-shell"><code class="language-shell">db_load  -T  -t  hash  -f  /etc/vsftpd/ftpusers.txt  /etc/vsftpd/vsftpd_login.dbchmod  700  /etc/vsftpd/vsftpd_login.db<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（4）    配置PAM认证文件，/etc/pam.d/vsftpd行首加入如下两行：</p><pre class="line-numbers language-shell"><code class="language-shell">auth      required        pam_userdb.so   db=/etc/vsftpd/vsftpd_loginaccount   required        pam_userdb.so   db=/etc/vsftpd/vsftpd_login<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（5）    所有Vsftpd虚拟用户需要映射到一个系统用户，该系统用户不需要密码，也不需要登录，主要用于虚拟用户映射使用，创建命令如下：</p><pre class="line-numbers language-shell"><code class="language-shell">useradd    -s   /sbin/nologin    ftpuser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（6）    完整vsftpd.conf配置文件代码如下：</p><pre class="line-numbers language-shell"><code class="language-shell">anonymous_enable=YESlocal_enable=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESuserlist_enable=YEStcp_wrappers=YES#config virtual user FTPpam_service_name=vsftpd            #虚拟用户启用pam认证；guest_enable=YES                #启用虚拟用户；guest_username=ftpuser            #映射虚拟用户至系统用户ftpuser；user_config_dir=/etc/vsftpd/vsftpd_user_conf        #设置虚拟用户配置文件所在的目录；virtual_use_local_privs=YES        #虚拟用户使用与本地用户相同的权限。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（7）    至此，所有虚拟用户共同基于/home/ftpuser主目录实现文件上传与下载，可以在/etc/vsftpd/vsftpd_user_conf目录创建虚拟用户各自的配置文件，创建虚拟用户配置文件主目录: </p><pre class="line-numbers language-shell"><code class="language-shell">mkdir  -p    /etc/vsftpd/vsftpd_user_conf/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（8）    如下分别为虚拟用户virtualuser1、virtualuser2用户创建配置文件：</p><pre class="line-numbers language-shell"><code class="language-shell">vim /etc/vsftpd/vsftpd_user_conf/virtualuser1#写入如下内容local_root=/home/ftpuser/virtualuser1        #虚拟用户配置文件路径,需要先创建该私有虚拟目录write_enable=YES                #允许登陆用户有写权限；anon_world_readable_only=YES        #允许匿名用户下载，然后读取文件；anon_upload_enable=YES            #允许匿名用户上传文件权限，只有在write_enable=YES时该参数才生效；anon_mkdir_write_enable=YES        #允许匿名用户创建目录，只有在write_enable=YES时该参数才生效；anon_other_write_enable=YES        #允许匿名用户其他权限，例如删除、重命名等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（9）    创建虚拟用户各自虚拟目录：</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir -p /home/ftpuser/{virtualuser1,virtualuser2}chown -R ftpuser:ftpuser /home/ftpuser<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之后重启Vsftpd服务，通过Windows客户端资源管理器登录Vsftpd服务端，就可以使用虚拟用户登录到ftp服务器了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux网络服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经典算法问题</title>
      <link href="/2020/08/03/python/%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/03/python/%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="经典算法问题"><a href="#经典算法问题" class="headerlink" title="经典算法问题"></a>经典算法问题</h1><p>整理了在学习python过程中遇到的一些经典案例。</p><h2 id="1、打印斐波那契数列"><a href="#1、打印斐波那契数列" class="headerlink" title="1、打印斐波那契数列"></a>1、打印斐波那契数列</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#斐波那契数列：1,1,2,3,5,8,13,21,...</span><span class="token keyword">def</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">or</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">return</span> fib<span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fib<span class="token punctuation">(</span>n<span class="token number">-2</span><span class="token punctuation">)</span>n <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入要打印的斐波拉契数列长度："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#把获取的斐波拉契数值存放在一个列表中</span>nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    nums<span class="token punctuation">.</span>append<span class="token punctuation">(</span>fib<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        input<span class="token punctuation">(</span><span class="token string">"\n打印完成，按下回车键退出。"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、打印水仙花数"><a href="#2、打印水仙花数" class="headerlink" title="2、打印水仙花数"></a>2、打印水仙花数</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#水仙花数：一个三位数，每位上（个位，十位，百位）的数字的三次方之和等于该数字本身</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> i <span class="token operator">//</span> <span class="token number">100</span>  <span class="token comment" spellcheck="true">#百位</span>    b <span class="token operator">=</span> i <span class="token operator">//</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token number">10</span>  <span class="token comment" spellcheck="true">#十位</span>    c <span class="token operator">=</span> i <span class="token operator">%</span><span class="token number">10</span>   <span class="token comment" spellcheck="true">#个位</span>    sum <span class="token operator">=</span> a<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">+</span> b<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">+</span> c<span class="token operator">**</span><span class="token number">3</span>    <span class="token keyword">if</span> sum <span class="token operator">==</span> i<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%d 是水仙花数"</span><span class="token operator">%</span>i<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>input<span class="token punctuation">(</span><span class="token string">"\n三位数的水仙花数打印完成，按回车键退出。"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、汉诺塔"><a href="#3、汉诺塔" class="headerlink" title="3、汉诺塔"></a>3、汉诺塔</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#有三根杆(A，B，C)，A杆上自下而上、由小到大按顺序放置64个盘子，要求将A杆上的盘子全部移动到C杆上，并保持原有顺序叠好。</span><span class="token comment" spellcheck="true">#游戏规则：每次只能移动一个盘子，并且在移动过程中三根杆上都始终保持大盘在下，小盘在上，操作过程中盘子可以在A、B、C任一杆上</span><span class="token keyword">def</span> <span class="token function">han</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>A<span class="token punctuation">,</span>B<span class="token punctuation">,</span>C<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token string">" ==> "</span><span class="token punctuation">,</span>C<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        han<span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">,</span>A<span class="token punctuation">,</span>C<span class="token punctuation">,</span>B<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#将前n-1个从A通过C移动到B</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token string">" ==> "</span><span class="token punctuation">,</span>C<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#将第n个从A直接移动到C</span>        han<span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">,</span>B<span class="token punctuation">,</span>A<span class="token punctuation">,</span>C<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#将前n-1个从B通过A移动到C上</span>han<span class="token punctuation">(</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入汉诺塔的层数："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token string">"B"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、计算阶乘"><a href="#4、计算阶乘" class="headerlink" title="4、计算阶乘"></a>4、计算阶乘</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">jiecheng</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">return</span> n <span class="token operator">*</span> jiecheng<span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span>num <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入你想计算的数的阶乘："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%d的阶乘结果为：%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span>jiecheng<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>input<span class="token punctuation">(</span><span class="token string">"\n计算结束，按回车键退出。"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、八皇后问题"><a href="#5、八皇后问题" class="headerlink" title="5、八皇后问题"></a>5、八皇后问题</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">queen</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> cur<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> cur <span class="token operator">==</span> len<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">0</span>    <span class="token keyword">for</span> col <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        A<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">,</span>flag <span class="token operator">=</span> col<span class="token punctuation">,</span><span class="token boolean">True</span>        <span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> A<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">==</span> col <span class="token operator">or</span> abs<span class="token punctuation">(</span>col <span class="token operator">-</span> A<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> cur <span class="token operator">-</span> row<span class="token punctuation">:</span>                flag <span class="token operator">=</span> <span class="token boolean">False</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> flag<span class="token punctuation">:</span>            queen<span class="token punctuation">(</span>A<span class="token punctuation">,</span> cur<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>queen<span class="token punctuation">(</span><span class="token punctuation">[</span>None<span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6、猴子选王"><a href="#6、猴子选王" class="headerlink" title="6、猴子选王"></a>6、猴子选王</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#问题描述：</span><span class="token triple-quoted-string string">'''一堆猴子都有编号，编号是1，2，3 ...m，这群猴子（m个）按照1-m的顺序围坐一圈，从第1开始数，每数到第N个，该猴子就要离开此圈，这样依次下来，直到圈中只剩下最后一只猴子，则该猴子为大王。'''</span>m <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'请输入猴子个数：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'请输入出局号数：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">monkey</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>     list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    t <span class="token operator">=</span> <span class="token number">0</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>m<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">1</span>        t <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token punctuation">(</span>n <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>len<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'out:%s--->%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span>list1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'The King is:%s'</span><span class="token operator">%</span>list1<span class="token punctuation">)</span>monkey<span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、魔术师问题"><a href="#7、魔术师问题" class="headerlink" title="7、魔术师问题"></a>7、魔术师问题</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">'''魔术师发牌问题的简介：一位魔术师掏出一叠扑克牌，魔术师取出其中13张黑桃，洗好后，把牌面朝下。说：“我不看牌，只数一数就能知道每张牌是什么？”魔术师口中念一，将第一张牌翻过来看正好是A；魔术师将黑桃A放到桌上，继续数手里的余牌，第二次数1，2，将第一张牌放到这叠牌的下面，将第二张牌翻开，正好是黑桃2，也把它放在桌子上。第三次数1，2，3，前面二张牌放到这叠牌的下面，取出第三张牌，正好是黑桃3，这样依次将13张牌翻出，全部都准确无误。求解：魔术师手中牌的原始顺序是什么样子的？'''</span><span class="token comment" spellcheck="true">#缺陷：没有打印成一个列表</span>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">]</span>list3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">noun</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> <span class="token number">1</span>    t <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        t <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">+</span> count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>len<span class="token punctuation">(</span>list2<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s的位置是:第%s张 '</span><span class="token operator">%</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span>list2<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#list1.append(list2.pop(t))</span>        <span class="token comment" spellcheck="true">#list3.insert((list1[i]),count)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token comment" spellcheck="true">#for i in range(len(list1)):</span>        <span class="token comment" spellcheck="true">#print(i+1)</span>noun<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#print(list1)</span><span class="token comment" spellcheck="true">#print(list3)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8、约瑟夫问题"><a href="#8、约瑟夫问题" class="headerlink" title="8、约瑟夫问题"></a>8、约瑟夫问题</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">ysf</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>k<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#一共n个人，从编号为k的人开始报数，数到m的人出列</span>    list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    t <span class="token operator">=</span> k<span class="token number">-1</span>  <span class="token comment" spellcheck="true">#相当于一个指针，指向要出列的元素的index</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'出局人是：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">1</span>        t <span class="token operator">=</span> <span class="token punctuation">(</span>t<span class="token operator">+</span>m<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">%</span>len<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#print('t=%s'%t)</span>        <span class="token comment" spellcheck="true">#print('列表长度为：%s'%len(list1))</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第%s次:%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span>list1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"留下的编号为：%s"</span><span class="token operator">%</span>list1<span class="token punctuation">)</span>ysf<span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#只能打印最后一个报数的人</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python经典案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows远程桌面问题解决办法</title>
      <link href="/2020/08/03/windows/Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3/"/>
      <url>/2020/08/03/windows/Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows远程桌面失败解决办法"><a href="#Windows远程桌面失败解决办法" class="headerlink" title="Windows远程桌面失败解决办法"></a>Windows远程桌面失败解决办法</h1><p>某一次重装了win10系统后想要远程到Windows server上去时突然就连不上了，出现如下错误提示：</p><blockquote><p>出现身份验证错误</p><p>要求的函数不受支持</p><p>远程计算机：</p><p>这可能是由于CredSSP加密Oracle修正。</p><p>若要了解详细信息，请访问 <a href="https://go.microsoft.com/fwlink/?linkid=866660" target="_blank" rel="noopener">https://go.microsoft.com/fwlink/?linkid=866660</a></p></blockquote><p>在网上找了一些大神，确定这是Windows系统更新所造成的，补丁更新时将CredSSP身份验证协议默认设置成了“缓解”，在此之前是“易受攻击”。在此记录一下:smile:</p><p>解决办法：</p><p>1、修改组策略：</p><p>win+R打开运行，输入“gpedit.msc”打开组策略</p><p>2、修改配置：</p><p>选择“计算机配置-&gt;管理模板-&gt;系统-&gt;凭据分配-&gt;加密数据库修正”，勾选“已启用”并将选项中的“保护级别”修改为“易受攻击”，确定即可。</p><p>如果不行尝试重启电脑。</p>]]></content>
      
      
      <categories>
          
          <category> Windows问题处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python循环中的关键字</title>
      <link href="/2020/08/03/python/%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97/"/>
      <url>/2020/08/03/python/%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h1 id="循环中的关键字"><a href="#循环中的关键字" class="headerlink" title="循环中的关键字"></a>循环中的关键字</h1><p>continue和break都是用在循环语句中，都用来跳出循环，区别在于break用来跳出整个循环执行循环体之后的语句，而continue用来跳出本次循环继续下次循环，不执行当前循环中continue语句后面的循环体。</p><h2 id="break"><a href="#break" class="headerlink" title="break"></a>break</h2><p>break语句可以跳出for和while的循环体，如果使用break来终止循环，任何对应的循环else块将不执行。（终止）</p><p><strong>实例</strong>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">while</span> n <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>    n <span class="token operator">-=</span><span class="token number">1</span>    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码输出结果如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token number">4</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><p>continue语句被用来告诉python跳过当前循环块中的剩余语句，然后继续进行下一轮循环。（中止）</p><p><strong>实例</strong>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">while</span> n <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>    n <span class="token operator">-=</span><span class="token number">1</span>    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码输出结果如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token number">4</span><span class="token number">3</span><span class="token number">1</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="else"><a href="#else" class="headerlink" title="else"></a>else</h2><p>循环语句可以有 else 子句，它在穷尽列表(以for循环)或条件变为 false (以while循环)导致循环终止时被执行，但循环被 break 终止时不执行。</p><p><strong>实例</strong>：（判断十以内的质数）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> n <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> n <span class="token operator">%</span> x <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token string">'等于'</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">,</span> n<span class="token operator">//</span>x<span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 循环中没有找到元素</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token string">' 是质数'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行上述代码块的输出结果如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token number">2</span>  是质数<span class="token number">3</span>  是质数<span class="token number">4</span> 等于 <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token number">5</span>  是质数<span class="token number">6</span> 等于 <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token number">7</span>  是质数<span class="token number">8</span> 等于 <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token number">9</span> 等于 <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h2><p>Python pass是空语句，是为了保持程序结构的完整性。pass 不做任何事情，一般用做占位语句。</p>]]></content>
      
      
      <categories>
          
          <category> python关键字 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python其他小技巧</title>
      <link href="/2020/08/03/python/python%E5%85%B6%E4%BB%96%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/08/03/python/python%E5%85%B6%E4%BB%96%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="python其他小技巧"><a href="#python其他小技巧" class="headerlink" title="python其他小技巧"></a>python其他小技巧</h1><h2 id="1、操作函数"><a href="#1、操作函数" class="headerlink" title="1、操作函数"></a>1、操作函数</h2><p>创建函数对象的list，根据想要调用的index，方便统一调用。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i\'m f'</span><span class="token punctuation">)</span>    <span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i\'m g'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span>g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>i'm f<span class="token operator">>></span><span class="token operator">></span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span>g<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>i'm g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、生成逆序序列"><a href="#2、生成逆序序列" class="headerlink" title="2、生成逆序序列"></a>2、生成逆序序列</h2><p>range()方法第三个参数为负数时，表示从第一个参数开始递减，终止到第二个参数（不包括此边界）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python正则</title>
      <link href="/2020/08/03/python/Python%E6%AD%A3%E5%88%99/"/>
      <url>/2020/08/03/python/Python%E6%AD%A3%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h1 id="python正则"><a href="#python正则" class="headerlink" title="python正则"></a>python正则</h1><h2 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> re<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1、match方法"><a href="#1、match方法" class="headerlink" title="1、match方法"></a>1、match方法</h2><p>re.match尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回None。</p><p>函数语法：</p><pre class="line-numbers language-python"><code class="language-python">re<span class="token punctuation">.</span>match<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>string<span class="token punctuation">,</span><span class="token punctuation">[</span>flags<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>函数参数说明：</p><table><thead><tr><th>参数</th><th align="left">描述</th></tr></thead><tbody><tr><td>pattern</td><td align="left">匹配的正则表达式</td></tr><tr><td>string</td><td align="left">要匹配的字符串</td></tr><tr><td>flags</td><td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，是否多行匹配等</td></tr></tbody></table><p>实例说明：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">'www'</span><span class="token punctuation">,</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>re<span class="token punctuation">.</span>Match object<span class="token punctuation">;</span> span<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> match<span class="token operator">=</span><span class="token string">'www'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">'com'</span><span class="token punctuation">,</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以使用group(num)或groups()匹配对象函数来获取匹配表达式。</p><table><thead><tr><th>匹配对象方法</th><th>描述</th></tr></thead><tbody><tr><td>group(num=0)</td><td>匹配的整个表达式的字符串，group()可以一次输入多个组号，这种情况下他将返回一个包含那些组所对应值的元组</td></tr><tr><td>groups()</td><td>返回一个包含所有小组字符串的元组，从1到所包含的小组号</td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> reline <span class="token operator">=</span> <span class="token string">"Cats are smarter than dogs"</span><span class="token comment" spellcheck="true"># .* 表示任意匹配除换行符（\n、\r）之外的任何单个或多个字符</span>matchObj <span class="token operator">=</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span> r<span class="token string">'(.*) are (.*?) .*'</span><span class="token punctuation">,</span> line<span class="token punctuation">,</span> re<span class="token punctuation">.</span>M<span class="token operator">|</span>re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token keyword">if</span> matchObj<span class="token punctuation">:</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"matchObj.group() : "</span><span class="token punctuation">,</span> matchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"matchObj.group(1) : "</span><span class="token punctuation">,</span> matchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"matchObj.group(2) : "</span><span class="token punctuation">,</span> matchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"No match!!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果如下：</p><pre class="line-numbers language-python"><code class="language-python">matchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>  Cats are smarter than dogsmatchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>  CatsmatchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>  smarter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、search方法"><a href="#2、search方法" class="headerlink" title="2、search方法"></a>2、search方法</h2><p>re.search扫描整个字符串并返回第一个成功的匹配</p><p>函数语法：</p><pre class="line-numbers language-python"><code class="language-python">re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>string<span class="token punctuation">,</span><span class="token punctuation">[</span>flags<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#参数说明同match方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实例说明：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'www'</span><span class="token punctuation">,</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>span<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'com'</span><span class="token punctuation">,</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>span<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="re-match与re-search的区别"><a href="#re-match与re-search的区别" class="headerlink" title="re.match与re.search的区别"></a>re.match与re.search的区别</h3><p>re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配，如果没有匹配到则返回None。</p><h2 id="3、sub方法"><a href="#3、sub方法" class="headerlink" title="3、sub方法"></a>3、sub方法</h2><p>python的re模块提供了re.sub用于替换字符串中的匹配项。</p><p>函数语法：</p><pre class="line-numbers language-python"><code class="language-python">re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>repl<span class="token punctuation">,</span>string<span class="token punctuation">,</span><span class="token punctuation">[</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>flags<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>函数的参数说明：</p><ul><li>pattern：正则中的模式字符串</li><li>repl：替换的字符串，也可为一个函数</li><li>string：要被查找替换的原始字符串</li><li>count：模式匹配后替换的最大次数，默认0表示替换所有的匹配</li><li>flags：编译时用的匹配模式，数字形式</li></ul><p>实例说明：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> phone <span class="token operator">=</span> <span class="token string">"123-4567-8912 # 电话号码"</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"电话号码："</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>r<span class="token string">'#.*$'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span>        #删除注释电话号码： <span class="token number">123</span><span class="token operator">-</span><span class="token number">4567</span><span class="token operator">-</span><span class="token number">8912</span> <span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"电话号码："</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>r<span class="token string">'\D'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#删除非数字内容</span>电话号码： <span class="token number">12345678912</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux软件包管理</title>
      <link href="/2020/08/02/linux/Linux%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/"/>
      <url>/2020/08/02/linux/Linux%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux软件包管理"><a href="#Linux软件包管理" class="headerlink" title="Linux软件包管理"></a>Linux软件包管理</h1><p>Linux软件包管理大致可分为二进制包、源码包，使用的工具也各不相同。Linux常见软件包分为两种，分别是源代码包（Source Code）、二进制包（Binary Code），源代码包是没有经过编译的包，需要经过GCC、C++编译器环境编译才能运行，二进制包无需编译，可以直接安装使用。</p><p>通常而言，可以通过后缀简单区别源码包和二进制包，例如.tar.gz、.zip、.rar结尾的包通常称之为源码包，以.rpm结尾的软件包称之为二进制包。真正区分是否为源码还是二进制还得基于代码里面的文件来判断，例如包含.h、.c、.cpp、.cc等结尾的源码文件，称之为源码包，而代码代码里面存在bin可执行文件，称之为二进制包。</p><h2 id="1、RPM软件包管理"><a href="#1、RPM软件包管理" class="headerlink" title="1、RPM软件包管理"></a>1、RPM软件包管理</h2><h3 id="1-1、简介"><a href="#1-1、简介" class="headerlink" title="1.1、简介"></a>1.1、简介</h3><p>rpm由Redhat公司提出，被大多数Linux发行版采用，rpm建立统一的数据库文件，详细记录软件的安装、卸载等变化信息，能够自动分析软件包的依赖关系。</p><p>使用RPM工具可以对软件包实现快速安装、管理及维护。RPM管理工具适用的操作系统包括：CentOS，RedHat，Fedora，SUSE等，RPM工具常用于管理.rpm后缀结尾的软件包。</p><h3 id="1-2、RPM包命名规则"><a href="#1-2、RPM包命名规则" class="headerlink" title="1.2、RPM包命名规则"></a>1.2、RPM包命名规则</h3><p>rpm包命名格式一般包括如下几种：</p><blockquote><p>name-version-noarch.rpm（其他平台编译）</p><p>name-version-arch.src.rpm（源代码包）</p></blockquote><p><strong>示例</strong>：</p><pre><code>perl-Pod-Plainer-1.03-1.el6.noarch.rpmyasm-1.2.0-4.el7.x86_64.rpm</code></pre><p>rpm包格式解析如下：</p><pre><code>name              软件名称，例如yasm、perl-pod-Plainer；version         版本号，1.2.0通用格式：“主版本号.次版本号.修正号”；-4表示是发布版本号，该RPM包是第几次编译生成的；arch             适用的硬件平台，RPM支持的平台有：i386、i586、i686、x86_64、sparc、alpha等。.rpm            后缀包表示编译好的二进制包，可用rpm命令直接安装；.src.rpm        源代码包，源码编译生成.rpm格式的RPM包方可使用；el*              软件包发行版本，el6表示该软件包适用于RHEL 6.x/CentOS 6.x；devel：             开发包；noarch：            软件包可以在任何平台上安装。</code></pre><h3 id="1-3、rpm命令详解"><a href="#1-3、rpm命令详解" class="headerlink" title="1.3、rpm命令详解"></a>1.3、rpm命令详解</h3><p>通常使用<strong>rpm</strong>命令来查看、安装、卸载rpm软件包，用法：rpm  [选项]  包名，常用选项参数详情如下：</p><pre><code>-a                查询所有已安装软件包；-q                 表示询问用户，输出信息；-l                打印软件包的列表；-f                FILE 查询包含 FILE 的软件包；-i                显示软件包信息，包括名称，版本，描述；-v                 打印输出详细信息；-U                 升级RPM软件包；-h                 软件安装，可以打印安装进度条；--last            列出软件包时，以安装时间排序，最新的在上面；-e                 卸载rpm软件包--force            表示强制，强制安装或者卸载；--nodeps        RPM包不依赖-l                列出软件包中的文件；--provides        列出软件包提供的特性；-R                列出软件包依赖的其他软件包；--scripts        列出软件包自定义的小程序。</code></pre><p><strong>示例</strong>：</p><p>a、查看httpd软件包是否安装</p><pre class="line-numbers language-shell"><code class="language-shell">rpm  -qa|grep httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b、安装httpd软件包</p><pre class="line-numbers language-shell"><code class="language-shell">rpm  -ivh  httpd-2.4.10-el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意</strong>：在使用rpm安装软件包时，通常需要安装很多相应的依赖包，因此在使用该方法安装软件时较麻烦。</p><h3 id="1-4、解决软件包的依赖问题"><a href="#1-4、解决软件包的依赖问题" class="headerlink" title="1.4、解决软件包的依赖问题"></a>1.4、解决软件包的依赖问题</h3><ul><li>安装有依赖关系的多个软件时，被依赖的软件必须最先安装，可同时指定多个rpm包进行安装</li><li>卸载依赖关系的多个软件包时，依赖其他程序的软件包必须最先卸载，可同时指定多个rpm包进行卸载</li><li>忽略依赖关系：–nodeps，不推荐，可能造成软件异常</li></ul><h2 id="2、tar软件包管理"><a href="#2、tar软件包管理" class="headerlink" title="2、tar软件包管理"></a>2、tar软件包管理</h2><p>Linux操作系统除了使用RPM管理工具对软件包管理之外，还可以通过tar、zip、jar等工具进行源码包的管理。</p><p>tar包通常以‘.tar’、‘.tar.gz’或‘.tar.bz2’结尾，在进行安装之前需要使用<strong>tar</strong>命令进行解包，然后再使用源码安装的方式进行软件包的安装。<strong>tar</strong>命令的功能时实现打包软件或者将软件包解包，用法：tar  [选项]  包名，常用选项参数如下：</p><pre><code>-A, --catenate, --concatenate      将存档与已有的存档合并-c, --create                     建立新的存档-d, --diff, --compare            比较存档与当前文件的不同之处--delete                        从存档中删除-r, --append                    附加到存档结尾-t, --list                      列出存档中文件的目录-u, --update                    仅将较新的文件附加到存档中-x, --extract, --get            解压文件-j, --bzip2, --bunzip2            有bz2属性的软件包；-z, --gzip, --ungzip            有gz属性的软件包；-b, --block-size N              指定块大小为 Nx512 字节（缺省时 N=20)；-B, --read-full-blocks          读取时重组块；-C, --directory DIR             指定新的目录；--checkpoint                    读取存档时显示目录名；-f, --file [HOSTNAME:]F         指定存档或设备，后接文件名称；--force-local                   强制使用本地存档，即使存在克隆；-G, --incremental               建立老 GNU 格式的备份；-g, --listed-incremental        建立新 GNU 格式的备份；-h, --dereference               不转储动态链接，转储动态链接指向的文件；-i, --ignore-zeros              忽略存档中的 0 字节块（通常意味着文件结束）；--ignore-failed-read            在不可读文件中作 0 标记后再退出；-k, --keep-old-files            保存现有文件；从存档中展开时不进行覆盖；-K, --starting-file F           从存档文件 F 开始；-l, --one-file-system           在本地文件系统中创建存档；-L, --tape-length N             在写入 N*1024 个字节后暂停，等待更换磁盘；-m, --modification-time         当从一个档案中恢复文件时，不使用新的时间标签；-M, --multi-volume              建立多卷存档,以便在几个磁盘中存放；-O, --to-stdout                 将文件展开到标准输出；-P, --absolute-paths               不要从文件名中去除 &#39;/&#39;；-v, --verbose                    详细显示处理的文件；--version                       显示tar 程序的版本号；--exclude                       FILE不把指定文件包含在内；-X, --exclude-from FILE            从指定文件中读入不想包含的文件的列表。</code></pre><p><strong>示例</strong>：</p><p>a、使用gzip格式打包testdir文件或目录，打包后的名称testdir.tar.gz</p><pre class="line-numbers language-shell"><code class="language-shell">tar -czvf testdir.tar.gz testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b、解压testdir.tar.gz到/tmp目录</p><pre class="line-numbers language-shell"><code class="language-shell">tar -zxvf testdir.tar.gz -C /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>tar实现Linux操作系统备份</strong>：</p><p><strong>tar</strong>命令工具除了用于日常打包、解压源码包或者压缩包之外，最大的亮点是还可以用于Linux操作系统文件及目录的备份，使用“tar -g”可以基于GNU 格式的增量备份，备份原理是基于检查目录或者文件的atime、mtime、ctime属性是否被修改。文件及目录时间属性详解如下：</p><ul><li>文件被访问的时间（Access time，atime）</li><li>文件内容被改变的时间（Modified time，mtime）</li><li>文件写入、权限变更的时间（Change time，ctime）</li></ul><p>总结，更改文件mtime和ctime都会改变，但ctime可以在mtime未发生改变时被更改，例如修改文件权限，文件mtime时间不变，而ctime时间改变。</p><p><strong>tar增量备份</strong>案例演示步骤如下：</p><p>（1）、在/root目录创建testdir目录，同时在testdir目录中，新建test1.txt，test2.txt文件</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir /testdirtouch /testdir/test1.txt /testdir/test2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（2）、使用<strong>tar</strong>命令第一次完整备份testdir目录中的内容，-g指定快照snapshot文件，第一次没有该文件则会自动创建</p><pre class="line-numbers language-shell"><code class="language-shell">cd /testdirtar  -g  /data/backup/snapshot  -czvf  /data/backup/2020testdir.tar.gz /testdir/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行上述命令的输出如下：</p><pre><code>tar: .：目录是新的././test1.txt./test2.txt</code></pre><p>（3）、使用tar命令第一次完整备份testdir目录之后，会生成快照文件：/data/backup/snapshot，后期增量备份会以snapshot文件为参考，在testdir目录中再创建test3.txt test4.txt文件，然后通过tar命令增量备份testdir目录所有内容</p><pre class="line-numbers language-shell"><code class="language-shell">touch /testdir/test3.txt /testdir/test4.txttar -g /data/backup/snapshot -cpvzf /data/backup/2020testdir.tar.gz /testdir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行上述命令输出如下：(生成的新的tar包中只包含新创建的文件)</p><pre><code>././test3.txt./test4.txt</code></pre><p>总结：在使用<strong>tar</strong>命令增量备份时，需-g指定第一次完整备份的快照snapshot文件，同时增量打包的文件名不能跟第一次备份后的文件名重复，通过tar –tf可以查看打包后的文件内容。</p><p><strong>shell脚本</strong>实现增量备份：</p><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bash#Automatic Backup Linux System Files#Define VariablesSOURCE_DIR=(    $*)TARGET_DIR=/data/backup/YEAR=`date +%Y`MONTH=`date +%m`DAY=`date +%d`WEEK=`date +%u`FILES=system_backup.tgzCODE=$?if    [ -z $SOURCE_DIR ]；then    echo -e "Please Enter a File or Directory You Need to Backup:\n--------------------------------------------\nExample $0 /boot /etc ......"    exitfi#Determine Whether the Target Directory Existsif    [ ! -d $TARGET_DIR/$YEAR/$MONTH/$DAY ]；then    mkdir -p $TARGET_DIR/$YEAR/$MONTH/$DAY    echo "This $TARGET_DIR Created Successfully !"fi#EXEC Full_Backup Function CommandFull_Backup(){if    [ "$WEEK" -eq "7" ]；then    rm -rf $TARGET_DIR/snapshot    cd $TARGET_DIR/$YEAR/$MONTH/$DAY ；tar -g $TARGET_DIR/snapshot -czvf $FILES `echo ${SOURCE_DIR[@]}`    [ "$CODE" == "0" ]&&echo -e  "--------------------------------------------\nFull_Backup System Files Backup Successfully !"fi}#Perform incremental BACKUP Function CommandAdd_Backup(){   cd $TARGET_DIR/$YEAR/$MONTH/$DAY ；if    [ -f $TARGET_DIR/$YEAR/$MONTH/$DAY/$FILES ]；then    read -p "$FILES Already Exists, overwrite confirmation yes or no ? : " SURE    if [ $SURE == "no" -o $SURE == "n" ]；then    sleep 1 ；exit 0    fi#Add_Backup Files System    if        [ $WEEK -ne "7" ]；then        cd $TARGET_DIR/$YEAR/$MONTH/$DAY ；tar -g $TARGET_DIR/snapshot -czvf $$_$FILES `echo ${SOURCE_DIR[@]}`        [ "$CODE" == "0" ]&&echo -e  "-----------------------------------------\nAdd_Backup System Files Backup Successfully !"   fielse   if      [ $WEEK -ne "7" ]；then      cd $TARGET_DIR/$YEAR/$MONTH/$DAY ；tar -g $TARGET_DIR/snapshot -czvf $FILES `echo ${SOURCE_DIR[@]}`      [ "$CODE" == "0" ]&&echo -e  "-------------------------------------------\nAdd_Backup System Files Backup Successfully !"   fifi}Full_Backup；Add_Backup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、ZIP软件包管理"><a href="#3、ZIP软件包管理" class="headerlink" title="3、ZIP软件包管理"></a>3、ZIP软件包管理</h2><p>ZIP也是计算机文件的压缩的算法，原名Deflate（真空），发明者为菲利普·卡兹（Phil Katz)），他于1989年1月公布了该格式的资料。ZIP通常使用后缀名“.zip”。</p><p>主流的压缩格式包括tar、rar、zip、war、gzip、bz2、iso等。从性能上比较，TAR、WAR、RAR格式较ZIP格式压缩率较高，但压缩时间远远高于ZIP，Zip命令行工具可以实现对zip属性的包进行管理，也可以将文件及文件及打包成zip格式。如下为ZIP工具打包常见参数详解：</p><pre><code>-f                    freshen：只更改文件；-u                    update：只更改或新文件；-d                    从压缩文件删除文件；-m                    中的条目移动到zipfile（删除OS文件）；-r                    递归到目录；-j                    junk（不记录）目录名；-l                    将LF转换为CR LF（-11 CR LF至LF）；-1                    压缩更快1-9压缩更好；-q                    安静操作，不输出执行的过程；-v                    verbose操作/打印版本信息；-c                    添加一行注释；-z                    添加zipfile注释；-o                    读取名称使zip文件与最新条目一样旧；-x                    不包括以下名称；-F                    修复zipfile（-FF尝试更难）；-D                    不要添加目录条目； -T                    测试zip文件完整性；-X                    eXclude eXtra文件属性；-e                    加密 - 不要压缩这些后缀；-h2                 显示更多的帮助。</code></pre><p><strong>示例</strong>：</p><p>a、通过zip工具打包testdir目录中所有内容</p><pre class="line-numbers language-shell"><code class="language-shell">zip -rv testdir.zip /testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b、通过zip工具打包testdir目录中所有内容，排除部分文件</p><pre class="line-numbers language-shell"><code class="language-shell">zip -rv testdir.zip /testdir -x test1.txt -x test2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>c、解压到指定目录，-d选项可以指定解压后的目录</p><pre class="line-numbers language-shell"><code class="language-shell">unzip testdir.zip -d /root/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、源码包软件管理"><a href="#4、源码包软件管理" class="headerlink" title="4、源码包软件管理"></a>4、源码包软件管理</h2><p>通常使用RPM工具管理.rpm结尾的二进制包，而标准的.zip、tar结尾的源代码包则不能使用RPM工具去安装、卸载及升级，源码包安装有三个步骤，如下:</p><ul><li>./config                预编译，主要用于检测系统基准环境库是否满足，生成MakeFile文件；</li><li>make                  编译，基于第一步生成的makefile文件，进行源代码的编译；使用make编译时，Linux操作系统必须有GCC编译器，用于编译源码</li><li>make install        安装，编译完毕之后，将相关的可运行文件安装至系统中；</li></ul><p>源码包安装通常需要./configure、make、make install三个步骤，某些特殊源码可以只有三步中的其中一个步骤，或者两个步骤。</p><p><strong>示例</strong>：源码编译安装nginx</p><pre class="line-numbers language-shell"><code class="language-shell">wget http://nginx.org/download/nginx-1.13.0.tar.gz    #从官网下载源码文件tar  -xvf nginx-1.13.0.tar.gz -C /usr/local        #解压到安装目录cd /usr/local/nginx-1.13.0；./configure        #进入解压目录预编译make && make install        #编译安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、YUM软件包管理"><a href="#5、YUM软件包管理" class="headerlink" title="5、YUM软件包管理"></a>5、YUM软件包管理</h2><p>前端软件包管理器（Yellow Updater Modified，YUM）适用于CentOS、Fedora、RedHat及SUSE中的Shell命令行，主要用于管理RPM包，于RPM工具使用范围类似，YUM工具能够从指定的服务器自动下载RPM包并且安装，还可以自动处理依赖性关系。</p><p>使用RPM工具管理和安装软件时，会发现rpm包有依赖，需要逐个手动下载安装，而YUM工具的最大便利就是可以自动安装所有依赖的软件包，从而提升效率，节省时间。</p><h3 id="5-1、yum工作原理"><a href="#5-1、yum工作原理" class="headerlink" title="5.1、yum工作原理"></a>5.1、yum工作原理</h3><p>YUM正常运行，需要依赖两个部分，一是YUM源端，二是YUM客户端，也即用户使用端。YUM客户端安装的所有RPM包都是来自YUM服务端，YUM源端通过HTTP或者FTP服务器发布。而YUM客户端能够从YUM源端下载依赖的RPM包是由于在YUM源端生成了RPM包的基准信息，包括RPM包版本号、配置文件、二进制信息、依赖关系等。</p><p>UM客户端需要安装软件或者搜索软件，会查找/etc/yum.repos.d下以.repo结尾文件，CentOS Linux默认的.repo文件名为CentOS-Base.repo，该文件中配置了YUM源端的镜像地址，所以每次安装、升级RPM包，YUM客户端均会查找.repo文件。</p><p>YUM客户端如果配置了CentOS官方repo源，客户端操作系统必须能联外网，满足网络条件，才能下载软件并安装，如果没有网络，也可以构建光盘源或者内部YUM源。在只要YUM客户端时，YUM客户端安装软件，默认会把YUM源地址、Header信息、软件包、数据库信息、缓存文件存储在/var/cache/yum中，每次使用YUM工具，YUM优先通过Cache查找相关软件包，Cache中不存在，然后在访问外网YUM源。</p><h3 id="5-2、yum使用演示"><a href="#5-2、yum使用演示" class="headerlink" title="5.2、yum使用演示"></a>5.2、yum使用演示</h3><p>由于YUM工具的使用简便、快捷、高效，在企业中得到广泛的使用，得到众多IT运维、程序人员的青睐，要能熟练使用YUM工具，需要先掌握YUM命令行参数的使用，如下为YUM命令工具的参数详解及实战步骤：</p><pre><code>YUM命令工具指南，YUM格式为：YUM [command] [package] -y|-q 其中的[options]是可选。-y安装或者卸载出现YES时，自动确认yes；-q不显示安装的过程。yum install httpd            安装httpd软件包；yum search                    YUM搜索软件包；yum list     httpd           显示指定程序包安装情况httpd；yum list                      显示所有已安装及可安装的软件包；yum remove  httpd            删除程序包httpd；yum erase   httpd            删除程序包httpd；yum update                      内核升级或者软件更新；yum update  httpd             更新httpd软件；yum check-update             检查可更新的程序；yum info    httpd           显示安装包信息httpd；yum provides                 列出软件包提供哪些文件；yum provides &quot;*/rz&quot;         列出rz命令由哪个软件包提供；yum grouplist               查询可以用groupinstall安装的组名称；yum groupinstall &quot;Chinese Support&quot;      安装中文支持；yum groupremove &quot;Chinese Support&quot;          删除程序组Chinese Support；yum deplist httpd             查看程序httpd依赖情况；yum clean   packages         清除缓存目录下的软件包；yum clean   headers         清除缓存目录下的headers；yum clean   all               清除缓存目录下的软件包及旧的headers。</code></pre><h2 id="6、YUM优先级配置"><a href="#6、YUM优先级配置" class="headerlink" title="6、YUM优先级配置"></a>6、YUM优先级配置</h2><p>基于YUM安装软件时,通常会配置多个Repo源，而Fastest mirror 插件是为拥有多个镜像的软件库配置文件而设计的。它会连接到每一个镜像，计算连接所需的时间，然后将镜像按快到慢排序供YUM应用。</p><p>默认CentOS Linux系统，Fastestmirror插件是开启的，所以安装软件会从最快的镜像源安装，但是由于Repo源很多，而在这些源中都存在某些软件包,但有些软件有重复,甚至冲突,能否可以优先从一些Repo源中去查找，如果找不到，再去其他源中找呢？</p><p>可以使用YUM优先级插件解决该问题，YUM提供的插件yum-plugin-priorities，直接YUM安装即可，命令如下：</p><pre class="line-numbers language-shell"><code class="language-shell">yum install -y yum-plugin-priorities<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改YUM源优先级配置文件，设置为Enabled，开启优先级插件，1为开启，0为禁止；</p><pre class="line-numbers language-shell"><code class="language-shell">vim /etc/yum/pluginconf.d/priorities.confenabled = 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>vim 修改/etc/yum.repos./xx.repo文件，在base段中加入如下指令：（优先级为1表示优先被查找，越大其反而被后续查找）</p><pre class="line-numbers language-shell"><code class="language-shell">priority=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、基于ISO镜像构建YUM源"><a href="#7、基于ISO镜像构建YUM源" class="headerlink" title="7、基于ISO镜像构建YUM源"></a>7、基于ISO镜像构建YUM源</h2><p>通常而言，YUM客户端使用前提是必须联外网，YUM安装软件时，检查repo配置文件查找相应的YUM源仓库，企业IDC机房很多服务器为了安全起见，是禁止服务器上外网的，所以不能使用默认的官方YUM源仓库。</p><h3 id="7-1、本地yum源"><a href="#7-1、本地yum源" class="headerlink" title="7.1、本地yum源"></a>7.1、本地yum源</h3><p>构建本地YUM光盘源，其原理是通过查找光盘中的软件包，实现YUM安装，配置步骤如下：</p><p>（1）    将CentOS镜像加载至虚拟机CD/DVD或者放入服务器CD/DVD光驱中，并将镜像文件挂载至服务器/mnt目录，挂载命令：</p><pre class="line-numbers language-shell"><code class="language-shell">mount /dev/cdrom /mnt/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    备份/etc/yum.repos.d/CentOS-Base.repo文件为CentOS-Base.repo.bak，同时在/etc/yum.repos.d目录下创建media.repo文件，并写入如下内容：</p><pre class="line-numbers language-shell"><code class="language-shell">[yum]name=CentOS7            #yum源显示名称baseurl=file:///mnt        #ISO镜像挂在目录gpgcheck=1                #是否检查GPG-KEY，也可用0表示不检查enabled=1                #是否启用yum源gpgkey=file:///mnt/RPM-GPG-KEY-CentOS-7      #指定载目录下的GPG-KEY文件验证。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）    运行命令“yum clean all”清空yum缓存，之后创建新的缓存“yum makecache”，之后便可使用<strong>yum</strong>命令安装镜像中存在的软件包</p><h3 id="7-2、HTTP网络yum源"><a href="#7-2、HTTP网络yum源" class="headerlink" title="7.2、HTTP网络yum源"></a>7.2、HTTP网络yum源</h3><p>YUM光盘源默认只能本机使用，局域网其他服务器无法使用YUM光盘源，如果想使用的话，需要在每台服务器上构建YUM本地源，该方案在企业中不可取，所以需要构建HTTP局域网YUM源解决，可以通过CreateRepo创建本地YUM源端，repo即为Repository。</p><p>构建HTTP局域网YUM源方法及步骤如下：</p><p>（1）    挂载光盘镜像文件至/mnt</p><pre class="line-numbers language-shell"><code class="language-shell">mount /dev/cdrom /mnt/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）    拷贝/mnt/Packages目录下所有软件包至/var/www/html/centos/</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir  -p  /var/www/html/centos/ cp    -R   /mnt/Packages/*  /var/www/html/centos/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）    使用Createrepo创建本地源，执行如下命令会在Centos目录生成repodata目录</p><pre class="line-numbers language-shell"><code class="language-shell">yum  install  createrepo*  -ycd /var/www/htmlcreaterepo  centos/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（4）    利用HTTP发布YUM本地源</p><p>本地YUM源通过CreateRepo搭建完毕，需要借助HTTP WEB服务器发布/var/www/html/centos/中所有软件，YUM或者RPM安装HTTP WEB服务器，并启动httpd服务。</p><pre class="line-numbers language-shell"><code class="language-shell">yum install  httpd  httpd-devel  -y        #安装HTTP WEB服务；useradd  apache  -g  apache                #创建apache用户和组；systemctl  restart  httpd.service        #重启HTTPD服务；setenforce 0                        #临时关闭SeLinux应用级安全策略；systemctl stop firewalld.service        #停止防火墙；ps -ef |grep httpd                        #查看HTTPD进程是否启动。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5）    在YUM客户端，创建/etc/yum.repos.d/http.repo文件，写入如下内容：</p><pre class="line-numbers language-shell"><code class="language-shell">[base]name="CentOS7 HTTP YUM"baseurl=http://192.168.1.115/centos/gpgcheck=0enabled=1[updates]name="CentOS7 HTTP YUM"baseurl=http://192.168.1.115/centosgpgcheck=0enabled=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（6）    运行命令“yum clean all”清空yum缓存，之后创建新的缓存“yum makecache”，之后便可使用<strong>yum</strong>命令安装镜像中存在的软件包</p><h3 id="7-3、扩展yum源端软件包"><a href="#7-3、扩展yum源端软件包" class="headerlink" title="7.3、扩展yum源端软件包"></a>7.3、扩展yum源端软件包</h3><p>默认使用ISO镜像文件中的软件包构建的HTTP YUM源，会发现缺少很多软件包，如果服务器需要挂载移动硬盘，Mount挂载移动硬盘需要ntfs-3g软件包支持，而本地光盘镜像中没有该软件包，此时需要往YUM源端添加ntfs-3g软件包，添加方法如下：</p><p>（1）    切换至/var/www/html/centos目录，官网下载NTFS-3G软件包。</p><pre class="line-numbers language-shell"><code class="language-shell">cd /var/www/html/centos/wget http://dl.fedoraproject.org/pub/epel/7/x86_64/n/ntfs-3g-2016.2.22-3.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（2）    <strong>createrepo</strong>命令更新软件包，同理，如需新增其他软件包，同样把软件下载至本地，然后通过createrepo更新即可</p><pre class="line-numbers language-shell"><code class="language-shell">createrepo --update centos/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）    客户端YUM验证，安装NTFS-3G软件包</p><pre class="line-numbers language-shell"><code class="language-shell">yum clean allyum install -y ntfs-3g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="7-4、同步外网yum源"><a href="#7-4、同步外网yum源" class="headerlink" title="7.4、同步外网yum源"></a>7.4、同步外网yum源</h3><p>在企业实际应用场景中，仅仅靠光盘里面的RPM软件包是不能满足需要，我们可以把外网的YUM源中的所有软件包同步至本地，可以完善本地YUM源的软件包数量及完整性。</p><p>获取外网YUM源软件常见方法包括Rsync、Wget、Reposync，三种同步方法的区别Rsync方式需要外网YUM源支持RSYNC协议，Wget可以直接获取，而Reposync可以同步几乎所有的YUM源，下面以Reporsync为案例，同步外网YUM源软件至本地，步骤如下：</p><p>（1）    下载CentOS7 REPO文件至/etc/yum.repos.d/，并安装reposync命令工具：</p><pre class="line-numbers language-shell"><code class="language-shell">wget  http://mirrors.163.com/.help/CentOS7-Base-163.repomv CentOS7-Base-163.repo /etc/yum.repos.d/centos.repoyum  clean allyum install yum-utils createrepo –yyum repolist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）    通过<strong>reposync</strong>命令工具获取外网YUM源所有软件包，-r指定repolist id，默认不加-r表示获取外网所有YUM软件包，-p参数表示指定下载软件的路径</p><pre class="line-numbers language-shell"><code class="language-shell">reposync  -r  base     -p     /var/www/html/centos/reposync  -r  updates  -p     /var/www/html/centos/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）    通过<strong>reposync</strong>工具下载完所有的软件包之后，需要执行createrepo更新本地yum仓库：</p><pre class="line-numbers language-shell"><code class="language-shell">createrepo  /var/www/html/centos/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户及权限管理</title>
      <link href="/2020/08/01/linux/Linux%E7%94%A8%E6%88%B7%E5%8F%8A%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
      <url>/2020/08/01/linux/Linux%E7%94%A8%E6%88%B7%E5%8F%8A%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户及权限管理"><a href="#Linux用户及权限管理" class="headerlink" title="Linux用户及权限管理"></a>Linux用户及权限管理</h1><p>​        Linux是一个多用户的操作系统，引入用户可以更加方便管理Linux服务器，系统默认需要以一个用户的身份登入，而且在系统上启动进程也需要以一个用户的身份去运行，用户可以限制某些进程对特定资源的权限控制。</p><h2 id="1、Linux用户及组"><a href="#1、Linux用户及组" class="headerlink" title="1、Linux用户及组"></a>1、Linux用户及组</h2><p>​        Linux操作系统对多用户的管理是非常繁琐的，所以用组的概念管理用户就变得简单，每个用户可以在一个独立的组，每个组也可以有零个用户或者多个用户。</p><p>​        Linux系统用户是根据用户ID来识别的，从默认ID编号0开始，但是为了和老式系统兼容，用户ID限制在60000以下，Linux用户总共分为三种，分别如下：</p><ul><li>root用户（ID为0）超级用户，一个Linux系统只能有一个超级用户，持有最高管理权限；</li><li>系统用户（ID为1~499）也叫程序用户，用来维持系统或程序的正常运行，一般不允许登录到系统；</li><li>普通用户（ID为500以上）一般只在用户自己的宿主目录下有完整权限。</li></ul><p>​        Linux系统中的每个文件或文件夹都有一个所属用户及所属组，使用<strong>id</strong>命令可以显示当前用户的信息，使用<strong>passwd</strong>命令可以修改用户密码。Linux操作系统用户的特点如下：</p><ul><li>每个用户拥有一个UserID，操作系统实际读取的是UID，而非用户名；</li><li>每个用户属于一个主组，属于一个或多个附属组，一个用户最多拥有31个附属组；</li><li>每个组拥有一个GroupID；</li><li>每个进程以一个用户身份运行，该用户可对进程拥有资源控制权限；</li><li>每个可登录用户拥有一个指定的Shell环境。</li></ul><h2 id="2、Linux用户管理"><a href="#2、Linux用户管理" class="headerlink" title="2、Linux用户管理"></a>2、Linux用户管理</h2><p>​        Linux用户在操作系统可以进行日常管理和维护，涉及到的相关配置文件如下：</p><ul><li>/etc/passwd   保存用户信息</li><li>/etc/shdaow   保存用户密码（以加密形式保存）</li><li>/etc/shdaow   保存用户密码（以加密形式保存）</li><li>/etc/login.defs  用户属性限制,密码过期时间,密码最大长度等限制</li><li>/etc/default/useradd 显示或更改默认的useradd配置文件</li></ul><h3 id="2-1、创建用户"><a href="#2-1、创建用户" class="headerlink" title="2.1、创建用户"></a>2.1、创建用户</h3><p>​        如需创建新用户，可以使用命令<strong>useradd</strong>，执行命令useradd user1即可创建user1用户，同时会创建一个同名的组user1，默认该用户属于user1主组。</p><p>​        “useradd user1”命令默认创建用户user1，会根据如下步骤进行操作：</p><ul><li><p>读取/etc/default/useradd，根据配置文件执行创建操作；</p></li><li><p>在/etc/passwd文件中添加用户信息；</p></li><li><p>如使用passwd命令创建密码，密码会被加密保存在/etc/shdaow中；</p></li><li><p>为user1创建家目录：/home/user1；</p></li><li><p>将/etc/skel中的.bash开头的文件复制至/home/user1家目录；</p></li><li><p>创建与用户名相同的user1组，user1用户默认属于user1同名组；</p></li><li><p>user1组信息保存在/etc/group配置文件中。</p></li></ul><p>​        使用<strong>useradd</strong>命令创建用户，用法：useradd  [选项]  登录，可以支持如下参数：</p><pre><code>-b                指定新账户的家目录；-c                新账户的 GECOS 字段；-d                新账户的主目录；-D                显示或更改默认的 useradd 配置；-e                新账户的过期日期；-f                新账户的密码不活动期；-g                新账户主组的名称或ID；-G                新账户的附加组列表；-h                显示此帮助信息并推出；-k                使用此目录作为骨架目录；-K                不使用 /etc/login.defs 中的默认值；-l                不要将此用户添加到最近登录和登录失败数据库；-m                创建用户的主目录；-M                不创建用户的主目录；-N                不创建同名的组；-o                允许使用重复的 UID 创建用户；-p                加密后的新账户密码；-r                创建一个系统账户；-R                chroot 到的目录；-s                新账户的登录 shell；-u                新账户的用户 ID；-U                创建与用户同名的组；-Z                为SELinux 用户映射使用指定 SEUSER。</code></pre><p><strong>示例</strong>：</p><p>a、创建user用户，并加入到user1，user2附属组：</p><pre class="line-numbers language-shell"><code class="language-shell">useradd -G user1,user2 user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b、创建test用户，并指定新的家目录，同时指出其登录的shell：</p><pre class="line-numbers language-shell"><code class="language-shell">useradd test -d /tmp/ -s /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2、删除用户"><a href="#2-2、删除用户" class="headerlink" title="2.2、删除用户"></a>2.2、删除用户</h3><p>​        如果想要删除一个用户，可以使用<strong>userdel</strong>命令，执行命令“userdel user1”就会删除user1用户，当用户属组中没有其他用户时，会一同删除该用户组，但是不会删除user1用户的家目录。</p><p>​        使用<strong>userdel</strong>命令删除用户，用法：userdel  [选项]  登录，常用选项如下：</p><pre><code>-f                强制删除用户（即使在用户登录的情况下）-h                显示帮助信息-r                删除主目录和邮件池-R                删除chroot到的目录-Z                为用户删除所有的Selinux用户映射</code></pre><p><strong>示例</strong>：</p><p>删除user用户，同时删除用户家目录：</p><pre class="line-numbers language-shell"><code class="language-shell">userdel -r user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3、修改用户信息"><a href="#2-3、修改用户信息" class="headerlink" title="2.3、修改用户信息"></a>2.3、修改用户信息</h3><p>​        <strong>usermod</strong>命令用来修改用户的基本信息，但是不允许改变正在登录的账号名称，用法：usermod  [选项]  登录，常用的选项参数如下：</p><pre><code>-c                修改账户的备注信息-d                修改账户登入时的目录-e                修改账户的有效期-f                修改在密码过期后多少天即关闭该账户-g                修改用户属组-G                修改用户附加组-l                修改账户名称（新名称 旧名称）-L                锁定用户密码，使密码无效-s                修改用户登入后所使用的shell-u                修改用户UID-U                解除密码锁定</code></pre><p><strong>示例</strong>：</p><p>a、将user用户改名为test</p><pre class="line-numbers language-shell"><code class="language-shell">usermod -l test user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b、将user用户添加到root组中</p><pre class="line-numbers language-shell"><code class="language-shell">usermod -G root user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-4、修改用户密码"><a href="#2-4、修改用户密码" class="headerlink" title="2.4、修改用户密码"></a>2.4、修改用户密码</h3><p>​        如果想要修改账户密码，可以使用<strong>passwd</strong>命令，passwd命令用于设置用户的认证信息，包括用户密码，密码过期时间等。系统管理员则能用它管理系统中其他用户的密码，一般用户只能变更自己的密码。用法：passwd  [选项]  登录，常用选项参数如下：</p><pre><code>-d                删除密码，仅有系统管理员才能使用；-f                强制执行；-k                设置只有在密码过期失效后，方能更新；-l                锁住密码；-s                列出密码的相关信息，仅有系统管理员才能使用；-u                解开已上锁的帐号。</code></pre><p><strong>注</strong>：当系统管理员清除了一个用户密码后，该用户登录系统时就无需认证。</p><h2 id="3、Linux组管理"><a href="#3、Linux组管理" class="headerlink" title="3、Linux组管理"></a>3、Linux组管理</h2><p>​        所有的Linux或者Windows系统都有组的概念，通过组可以更加方便的管理用户，组的概念应用于各行各业，例如企业会使用部门、职能或地区的分类方式来管理成员，映射到Linux系统，同样可以创建用户，并且用组的概念对其进行管理。</p><p>​        linux组有如下特点：</p><ul><li>每个组有一个组ID；</li><li>组信息保存在/etc/group中；</li><li>每个用户至少拥有一个主组，同时还可以拥有31个附属组。</li></ul><p>​        通过命令<strong>groupadd</strong>、<strong>groupdel</strong>、<strong>groupmod</strong>来对组进行管理，与用户管理类似，详细参数使用如下：</p><pre><code>groupadd用法-f                如果组已经存在则成功退出；并且如果 GID 已经存在则取消 –g；-g                为新组使用 GID；-h                显示此帮助信息并退出；-K                不使用 /etc/login.defs 中的默认值；-o                允许创建有重复 GID 的组；-p                为新组使用此加密过的密码；-r                创建一个系统账户；groupmod用法        -g                将组 ID 改为 GID；-h                显示此帮助信息并退出；-n                改名为 NEW_GROUP；-o                允许使用重复的 GID；-p                将密码更改为(加密过的) PASSWORD；groupdel用法-R                chroot 到的目录</code></pre><p><strong>示例</strong>：</p><p>a、创建usergroup组，并指定GID为1000</p><pre class="line-numbers language-shell"><code class="language-shell">groupadd -g 1000 usergroup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b、将usergroup组名改为testgroup</p><pre class="line-numbers language-shell"><code class="language-shell">groupmod -n testgroup usergroup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、Linux权限管理"><a href="#4、Linux权限管理" class="headerlink" title="4、Linux权限管理"></a>4、Linux权限管理</h2><p>​        Linux权限是操作系统用来限制对资源访问的机制，权限一般分为读、写、执行。系统中每个文件都拥有特定的权限、所属用户及所属组，通过这样的机制来限制哪些用户或用户组可以对特定文件进行相应的操作。</p><p>​        Linux每个进程都是以某个用户身份运行，进程的权限与该用户的权限一样，用户的权限越大，则进程拥有的权限就越大。</p><p>​        Lnux中有的文件及文件夹都有至少权限三种权限，常见的权限如下表所示：</p><table><thead><tr><th>权限</th><th>对文件的影响</th><th>对目录的影响</th></tr></thead><tbody><tr><td>r(读取)</td><td>可读取文件内容</td><td>可列出目录内容</td></tr><tr><td>w(写入)</td><td>可修改文件内容</td><td>可在目录中创建删除内容</td></tr><tr><td>x(执行)</td><td>可作为命令执行</td><td>可访问目录内容</td></tr></tbody></table><p><strong>注意</strong>：目录必须拥有x权限，否则无法查看其内容</p><p>​        Linux权限授权默认是授权给三种角色，分别是：user、group、other，Linux权限与用户世纪之间的关联如下：</p><ul><li>U代表user，G代表group，O代表other；</li><li>每个文件的权限基于UGO进行设置；</li><li>权限三位一组（rwx）,同时需授权给三种角色，UGO；</li><li>每个文件拥有一个所属用户和所属组，对应UGO，不属于该文件所属用户或所属组的使用O来表示。</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost etc]# ls -l passwd                #查看一个文件的详细信息-rw-r--r-- 1 root root 886 8月   1 18:07 passwd其中："-"：普通文件，“d”表示目录，“l”表示链接文件，“c”表示块文件"rw-r--r--"：分别对应UGO对该文件的操作权限"1"：文件链接数量"root"：所属用户"root"：所属组"888"：文件大小"8月 1 18:07"：文件修改时间"passwd"：文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、chown属主及属组"><a href="#5、chown属主及属组" class="headerlink" title="5、chown属主及属组"></a>5、chown属主及属组</h2><p>​        修改某个用户、组对文件夹的属主及属组，用命令chown实现，案例演示如下：</p><p>(1)  修改testdir文件夹所属的用户为root，其中-R参数表示递归处理所有的文件及子目录。</p><pre class="line-numbers language-shell"><code class="language-shell">chown -R  root  testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)  修改testdir文件夹所属的组为root。 </p><pre class="line-numbers language-shell"><code class="language-shell">chown  -R  :root  testdir或者:chgrp  –R  root  testdir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>(3)  修改testdir文件夹所属的用户为root，组也为root。</p><pre class="line-numbers language-shell"><code class="language-shell">chown  -R  root:root  jfedu.net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、chmod用户及组权限"><a href="#6、chmod用户及组权限" class="headerlink" title="6、chmod用户及组权限"></a>6、chmod用户及组权限</h2><h3 id="6-1、方式一"><a href="#6-1、方式一" class="headerlink" title="6.1、方式一"></a>6.1、方式一</h3><p>​        修改某个用户、组对文件夹的权限，用命令chmod实现，其中以代指ugo，、-、=代表加入、删除和等于对应权限，具体案例如下：</p><p>(1)   授予用户对testdir目录拥有rwx权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R u+rwx testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)  授予组对testdir目录拥有rwx权限</p><pre class="line-numbers language-shell"><code class="language-shell"> chmod –R g+rwx testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(3)  授予用户、组、其他人对testdir目录拥有rwx权限</p><pre class="line-numbers language-shell"><code class="language-shell"> chmod –R u+rwx,g+rwx,o+rwx testdir  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(4)  撤销用户对testdir目录拥有w权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R u-w testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(5)  撤销用户、组、其他人对testdir目录拥有x权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R   u-x,g-x,o-x testdir <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(6)  授予用户、组、其他人对testdir目录只有rx权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R   u=rx,g=rx,o=rx testdir  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-2、方式二"><a href="#6-2、方式二" class="headerlink" title="6.2、方式二"></a>6.2、方式二</h3><p>​        Linux权限默认使用rwx来表示，为了更简化在系统中对权限进行配置和修改，Linux权限引入二进制表示方法，其中<strong>1</strong>表示有权限，<strong>0</strong>表示没有权限。</p><p><em>rwx = 111 = 4+2+1 = 7</em></p><p><strong>示例</strong>：</p><p>(1)  授予用户对testdir目录拥有rwx权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R 755 testdir  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)  授予组对testdir目录拥有rwx权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R 775 testdir <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(3)  授予用户、组、其他人对testdir目录拥有rwx权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R 777 testdir  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(4)  撤销用户对testdir目录拥有w权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R 555 testdir  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(5)  撤销用户、组、其他人对testdir目录拥有x权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R 644 testdir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(6)  授予用户、组、其他人对testdir目录只有rx权限</p><pre class="line-numbers language-shell"><code class="language-shell">chmod –R 555 testdir <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基本命令&amp;文件目录管理</title>
      <link href="/2020/08/01/linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4&amp;%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/"/>
      <url>/2020/08/01/linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4&amp;%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装完操作系统后必要的两个操作"><a href="#一、安装完操作系统后必要的两个操作" class="headerlink" title="一、安装完操作系统后必要的两个操作"></a>一、安装完操作系统后必要的两个操作</h1><h2 id="1-关闭防火墙"><a href="#1-关闭防火墙" class="headerlink" title="1.关闭防火墙"></a>1.关闭防火墙</h2><pre><code>CentOS6：service iptables stop        #关闭防火墙service iptables status        #查看防火墙状态chkconfig iptables off        #禁止防火墙开机自启chkconfig iptables --list    #查看iptables在各个模式下的状态CentOS7：systemlctl stop firewalld    #关闭防火墙</code></pre><h2 id="2-关闭selinux"><a href="#2-关闭selinux" class="headerlink" title="2.关闭selinux"></a>2.关闭selinux</h2><h3 id="2-1永久关闭"><a href="#2-1永久关闭" class="headerlink" title="2.1永久关闭"></a>2.1永久关闭</h3><p>​        编辑/etc/sysconfig/selinux文件，将SELINUX=enforcing改为disabled，重启生效</p><pre><code>sed -i &#39;s/enforcing/disabled/&#39; /etc/sysconfig/selinux</code></pre><p>​        重启之后可以通过/usr/sbin/sestatus -v查看selinux状态，如果输出disabled则表示关闭，修改成功</p><h3 id="2-2临时关闭"><a href="#2-2临时关闭" class="headerlink" title="2.2临时关闭"></a>2.2临时关闭</h3><p>​        注：临时关闭selinux重启服务器后失效</p><pre><code>setenforce 0    #设置selinux为permissive模式setenforce 1    #设置selinux为enforcing模式getenforce        #查看selinux状态</code></pre><h1 id="二、Linux开机过程"><a href="#二、Linux开机过程" class="headerlink" title="二、Linux开机过程"></a>二、Linux开机过程</h1><p>​        BIOS–&gt;MBR–&gt;GRUB–&gt;kernel–&gt;init–&gt;startup        </p><pre><code>BIOS：硬件检测阶段MBR：主引导记录GRUB：引导装载程序Kernel：加载内核Init：启动初始进程Startup：启动</code></pre><h1 id="三、初始化进程init"><a href="#三、初始化进程init" class="headerlink" title="三、初始化进程init"></a>三、初始化进程init</h1><h2 id="1-查看init进程"><a href="#1-查看init进程" class="headerlink" title="1.查看init进程"></a>1.查看init进程</h2><pre><code>cat /etc/inittab        #查看init进程其中：0：挂起状态（关机）；1：单用户模式；2：多用户模式（没有network）；3：多用户模式（network）；4：未被定义使用；5：桌面模式；6：重启</code></pre><h2 id="2-模式切换"><a href="#2-模式切换" class="headerlink" title="2.模式切换"></a>2.模式切换</h2><p>语法：init +模式</p><pre><code>init 3        #切换到字符模式init 5        #切换到桌面模式(startx)</code></pre><h1 id="四、系统服务控制"><a href="#四、系统服务控制" class="headerlink" title="四、系统服务控制"></a>四、系统服务控制</h1><h2 id="1-service命令"><a href="#1-service命令" class="headerlink" title="1.service命令"></a>1.service命令</h2><p>service命令用来对一个服务进行开启关闭操作，以及查看服务状态。</p><p>格式：service service_name service_status</p><pre><code>注意：#service_name必须是 /etc/init.d 中存在的服务     #service_status有五种，start|stop|restart|reload|status</code></pre><h2 id="2-runlevel命令"><a href="#2-runlevel命令" class="headerlink" title="2.runlevel命令"></a>2.runlevel命令</h2><p>runlevel命令用来查看运行级别，例：</p><pre><code>[root@desktop /]# runlevel3    5        #其中3表示开机后上一次运行级别，5表示当前运行级别</code></pre><h2 id="3-chkconfig命令"><a href="#3-chkconfig命令" class="headerlink" title="3.chkconfig命令"></a>3.chkconfig命令</h2><p>chkconfig命令用来查看开机运行的程序，可以控制多个runlevel</p><pre><code>注意：chkconfig命令只针对2,3,4,5(runlevel)chkconfig service_name on|off        #设置服务开机自启或不自启chkconfig service_name --list        #查看服务在各个runlevel下的自启情况chkconfig --runlevel X service_name on|off        #针对某个runlevel进行服务开机自启控制</code></pre><h1 id="五、terminal下输出表示的含义"><a href="#五、terminal下输出表示的含义" class="headerlink" title="五、terminal下输出表示的含义"></a>五、terminal下输出表示的含义</h1><pre><code>[root@desktop ~]# root：表示当前用户desktop：表示主机名~：表示当前用户的home目录（默认情况下，除root用户外，其他用户只对home目录有完整的权限）#：表示当前用户为管理员用户$：表示当前用户为一般用户</code></pre><h1 id="六、Linux文件系统"><a href="#六、Linux文件系统" class="headerlink" title="六、Linux文件系统"></a>六、Linux文件系统</h1><p>Linux文件机构为树形结构，常见目录代表的含义如下：</p><pre><code>1、/：根目录，是所有分区，目录结构的起点2、/boot：存放系统内核和启动文件的目录，安装时建议单独为/boot目录划分一个分区，便于维护和备份3、/bin：用来存放所有用户都可执行的且常用的命令。4、/sbin:存放基本的管理命令，但一般只有管理员才能使用5、/etc:保存有关系统设置与管理的文件。6、/usr:用户应用程序存放的目录，类似于windows下的Program Files7、/var:存放经常变换的文件，例如日志文件，建议var独立分区。8、/home:除超级用户以外的用户的宿主目录都建立在该目录下。9、/root:root用户的宿主文件夹</code></pre><h1 id="七、查看系统的简单命令"><a href="#七、查看系统的简单命令" class="headerlink" title="七、查看系统的简单命令"></a>七、查看系统的简单命令</h1><h2 id="1-exit命令"><a href="#1-exit命令" class="headerlink" title="1.exit命令"></a>1.exit命令</h2><p>​    exit命令用于退出当前命令的操作环境</p><h2 id="2-uname命令"><a href="#2-uname命令" class="headerlink" title="2.uname命令"></a>2.uname命令</h2><pre><code>uname -r        #显示内核版本uname -a        #显示主机名、内核版本、硬件平台等详细信息</code></pre><h2 id="3-cat命令"><a href="#3-cat命令" class="headerlink" title="3.cat命令"></a>3.cat命令</h2><p>cat命令用于查看文件内容，经常和grep命令连用</p><pre><code>常见查看系统信息命令：cat /proc/cpuinfo        #查看CPU信息cat /proc/meminfo        #查看内存及swap信息cat /proc/swaps            #查看swap信息</code></pre><h2 id="4-ifconfig命令"><a href="#4-ifconfig命令" class="headerlink" title="4.ifconfig命令"></a>4.ifconfig命令</h2><p>ifconfig命令用来查看网卡信息，如果命令找不到，则可直接运行yum -y install net-tools即可</p><pre><code>ifconfig        #查看当前所有网卡信息ifconfig 网卡名        #查看具体某张网卡信息，其中RX、TX分别表示收包和发包</code></pre><h2 id="5-hostname命令"><a href="#5-hostname命令" class="headerlink" title="5.hostname命令"></a>5.hostname命令</h2><p>hostname命令用来查看主机名或更改主机名（更改重启后生效）</p><h2 id="6-su命令"><a href="#6-su命令" class="headerlink" title="6.su命令"></a>6.su命令</h2><p>su命令用来切换用户，需要注意的是：普通用户切换到root用户需要验证密码，而root用户切换到普通用户不需要验证密码。</p><h2 id="7-关机和重启"><a href="#7-关机和重启" class="headerlink" title="7.关机和重启"></a>7.关机和重启</h2><p>a.shutdown命令</p><p>用来关机或重启。shutdown -r/-h（reboot/halt） +分钟数 +描述[可选]</p><p>b.取消shutdown</p><pre><code>1.使用快捷键Ctrl+C自主取消2.shutdown -c    #超级用户在其他bash中取消</code></pre><p>c.关机</p><pre><code>1.init 02.shutdown3.shutdown -h now        #立即关机</code></pre><p>d.重启</p><pre><code>1.reboot2.init 63.shutdown -r now        #立即重启</code></pre><h1 id="八、Linux分区管理"><a href="#八、Linux分区管理" class="headerlink" title="八、Linux分区管理"></a>八、Linux分区管理</h1><h2 id="1-linux中万物皆文件"><a href="#1-linux中万物皆文件" class="headerlink" title="1.linux中万物皆文件"></a>1.linux中万物皆文件</h2><h2 id="2-dev-sda5含义：代表一个硬盘分区"><a href="#2-dev-sda5含义：代表一个硬盘分区" class="headerlink" title="2./dev/sda5含义：代表一个硬盘分区"></a>2./dev/sda5含义：代表一个硬盘分区</h2><pre><code>    1、sd：sici格式    2、a：第一块磁盘    3、5：第一块逻辑分区    4、分区分为主分区和逻辑分区，主分区最多不超过四块（可标记为活动分区用来安装操作系统）        sda1,sda2,sda3(主分区)        sda4(逻辑分区)，第一块逻辑分区为sda5,往后加1，以此类推</code></pre><h2 id="3-分区必须挂载到一个目录上"><a href="#3-分区必须挂载到一个目录上" class="headerlink" title="3.分区必须挂载到一个目录上"></a>3.分区必须挂载到一个目录上</h2><h2 id="4-linux文件系统类型"><a href="#4-linux文件系统类型" class="headerlink" title="4.linux文件系统类型"></a>4.linux文件系统类型</h2><pre><code>ext3ext4swap：Linux分区的一种类型，一般为内存的两倍，当内存超过2G或4G时可不需要swap分区</code></pre><h2 id="5-fat32"><a href="#5-fat32" class="headerlink" title="5.fat32"></a>5.fat32</h2><p>​    速度慢，不支持单个文件大于4G</p><h2 id="6-NTFS"><a href="#6-NTFS" class="headerlink" title="6.NTFS"></a>6.NTFS</h2><p>​    速度快，支持索引，支持压缩，支持加密，支持大文件</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基本命令I</title>
      <link href="/2020/08/01/linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4I/"/>
      <url>/2020/08/01/linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4I/</url>
      
        <content type="html"><![CDATA[<h1 id="一、shell"><a href="#一、shell" class="headerlink" title="一、shell"></a>一、shell</h1><h2 id="1-shell是什么"><a href="#1-shell是什么" class="headerlink" title="1.shell是什么"></a>1.shell是什么</h2><p>​        shell是一种脚本语言，同时也是Linux系统中运行的一种特殊程序，在用户和内核之间充当“翻译官”，用来实现人机交互。</p><h2 id="2-shell的工作"><a href="#2-shell的工作" class="headerlink" title="2.shell的工作"></a>2.shell的工作</h2><p>​        接收用户输入的命令–&gt;解释命令–&gt;传递给系统内核</p><h2 id="3-bash是什么"><a href="#3-bash是什么" class="headerlink" title="3.bash是什么"></a>3.bash是什么</h2><p>​        bash是Linux系统中默认使用的shell程序，bash存放的位置：/bin/bash</p><h2 id="4-命令分类"><a href="#4-命令分类" class="headerlink" title="4.命令分类"></a>4.命令分类</h2><p>​        Linux命令分为内部命令和外部命令，内部命令是指系统集成的命令（程序），开机自动载入内存；外部命令是指用户安装的程序，必须知道文件的位置才能使用。</p><pre><code>注：Linux外部命令由环境变量PATH决定，可以通过echo $PATH来打印环境变量</code></pre><h1 id="二、通用命令行使用格式"><a href="#二、通用命令行使用格式" class="headerlink" title="二、通用命令行使用格式"></a>二、通用命令行使用格式</h1><h2 id="1-格式"><a href="#1-格式" class="headerlink" title="1.格式"></a>1.格式</h2><p>命令字 [选项]  [参数]</p><p>命令字：决定命令实现的功能</p><p>选项：调节命令的具体功能</p><pre><code>选项注意事项：1、不同的命令字使用的选项会不同2、多个选项之间使用空格分隔3、若不使用选项，执行命令字的默认功能4、短格式选项：一般在选项前使用‘-’符号引导5、短格式默认跟的是单个字符，多个字符可以组合到一起6、多个单字符选项可以组合到一起使用7、长格式选项：一般在选项前使用‘--’符号引导8、长格式默认跟的是单词，多个单词之间必须使用空格和‘--’分隔</code></pre><p>参数：指的是操作对象</p><p>对象：包括文件，目录，用户</p><h2 id="2-注意"><a href="#2-注意" class="headerlink" title="2.注意"></a>2.注意</h2><ol><li>命令区分大小写</li><li>命令区分全角\半角</li><li>命令切忌使用中文符号</li></ol><h1 id="三、快捷键"><a href="#三、快捷键" class="headerlink" title="三、快捷键"></a>三、快捷键</h1><ol><li>Tab：补全命令&amp;显示文件夹内容</li><li>反斜杠‘\’：强制换行，但不中断命令</li><li>Ctrl + U：快速删除光标之前的所有内容</li><li>Ctrl + K：快速删除光标之后的所有内容</li><li>Ctrl + A：回到行首</li><li>Ctrl + L：==clear 清屏</li></ol><h1 id="四、帮助命令"><a href="#四、帮助命令" class="headerlink" title="四、帮助命令"></a>四、帮助命令</h1><ol><li>help +命令</li><li>命令 –help</li><li>Man 文件（q退出）</li></ol><h1 id="五、输出重定向-amp-管道"><a href="#五、输出重定向-amp-管道" class="headerlink" title="五、输出重定向&amp;管道"></a>五、输出重定向&amp;管道</h1><h2 id="1-输出重定向"><a href="#1-输出重定向" class="headerlink" title="1.输出重定向"></a>1.输出重定向</h2><p>​        输出重定向使用‘&gt;’表示，将命令成功执行后的屏幕输出结果保存到大于符号后指定的文件中</p><h2 id="2-管道"><a href="#2-管道" class="headerlink" title="2.管道"></a>2.管道</h2><p>​        管道用‘|’表示，用于将前面命令的屏幕输出结果作为后面命令的操作对象（输入）</p><h2 id="3-追加"><a href="#3-追加" class="headerlink" title="3.追加"></a>3.追加</h2><p>​        追加用‘&gt;&gt;’表示，将大于号前面的屏幕输出追加到后面的文件末尾</p><h1 id="六、显示查看常用命令"><a href="#六、显示查看常用命令" class="headerlink" title="六、显示查看常用命令"></a>六、显示查看常用命令</h1><h2 id="1-pwd命令"><a href="#1-pwd命令" class="headerlink" title="1.pwd命令"></a>1.pwd命令</h2><p>​        用于显示当前工作目录</p><h2 id="2-cd命令"><a href="#2-cd命令" class="headerlink" title="2.cd命令"></a>2.cd命令</h2><p>​        用来切换目录</p><ol><li>​    用法：cd +目录位置(绝对路径|相对路径)</li><li>​    cd ~ / cd +enter（不指定位置）：切换到当前用户的宿主目录</li><li>​    cd -    ：切换到上一次执行cd命令所在目录</li><li>​    绝对路径：从根目录开始</li><li>​    相对路径：从当前目录开始</li><li>​    ‘.’：表示当前目录</li></ol><h2 id="3-ls命令"><a href="#3-ls命令" class="headerlink" title="3.ls命令"></a>3.ls命令</h2><p>​        显示信息</p><pre><code>1、ls -l：以长格式显示文件和目录的列表，包括权限、大小、最后更新时间等详细信息2、ls -a：显示隐藏目录和文件，以及‘.’,‘..’文件3、ls -A：只显示隐藏文件和目录4、ls -d：显示当前目录本身属性5、ls -h：显示目录或文件大小，以（KB、MB）显示，默认大小单位为B6、ls -R：递归显示当前目录及其子目录中的所有内容7、ls --color：在字符模式中以不同颜色显示不同类型文件（默认集成在ls命令中）</code></pre><h2 id="4-du命令（disk-use）"><a href="#4-du命令（disk-use）" class="headerlink" title="4.du命令（disk use）"></a>4.du命令（disk use）</h2><p>​        用来统计目录及文件空间占用情况</p><pre><code>1、用法：du [选项] [目录或文件]2、Du -a :统计是包括所有文件，而不仅仅统计目录3、du -h：以KB、MB显示文件大小4、Du -s：只统计每个参数所占用空间的总大小</code></pre><h2 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h2><pre><code>1、通配符：    ?：匹配一个字符    *：匹配多个字符2、alias：别名        #一般为用户自己创建使用，且只在当前bash中生效</code></pre><h1 id="七、管理文件和目录常用命令"><a href="#七、管理文件和目录常用命令" class="headerlink" title="七、管理文件和目录常用命令"></a>七、管理文件和目录常用命令</h1><h2 id="1-创建文件和目录"><a href="#1-创建文件和目录" class="headerlink" title="1.创建文件和目录"></a>1.创建文件和目录</h2><p>1.mkdir（make directory） [选项] [目录位置及名称]<br>        mkdir -p         #创建包含子目录的目录（级联创建）</p><p>2.touch         #创建文件/更新文件的最后更改时间</p><p>3.ln            #创建链接（软连接|硬链接），为目录或文件创建链接文件</p><pre><code>注意：    1、创建链接时最好使用绝对路径    2、软链接：（ln -s）适用于文件或目录，与原始文件可以位于不同的文件系统中（能跨越分区），删除源文件后软链接失效（同步更新）。当源文件存在时，链接文件正常使用，删除原文件后，链接文件失效    3、硬链接：（ln）适用于文件，与原始文件不可以位于不同的文件系统中（不能跨越分区），删除源文件后硬链接不失效（同步更新）。当源文件存在时，链接文件正常使用，删除源文件后，链接文件依然有效</code></pre><p>4.cp（copy）        #复制文件</p><pre><code>cp -r        #递归复制，用于复制文件夹cp -i        #当目标文件存在时，提醒用户cp -p        #保持文件的权限，属主，属组及时间标记等属性不变cp -f        #强制执行复制</code></pre><p>5.rm（remove）    #删除文件</p><pre><code>1、rm -f        #强制删除2、rm -i        #提醒用户3、rm -r        #迭代</code></pre><p>6.mv（move）        #移动/重命名文件</p><pre><code>1、mv -f        #强制执行，覆盖前不询问2、mv -i        #interactive，覆盖前询问3、mv -u        #update，只在源文件比目标文件新，或目标文件不存在时才执行4、mv -v        #verbose，显示移动过程</code></pre><p>7.which</p><p>​        which命令主要用来1、寻找执行程序，which查找的目录依赖于环境变量PATH中定义的路径，用法：which +命令|程序名</p><pre><code>注意：    1、当which查找到第一个目标后不再继续查找    2、which用来查找内部命令时，将找不到对应的程序</code></pre><p>8.find</p><p>​        find命令主要用来寻找文件或文件夹，支持条件查找，用法：find  [查找范围（路径）]  [查找条件表达式]</p><pre><code>1、查找条件表达式：    -name :按照文件名称查找    -size ：按照文件大小查找    -user ：按照文件属主查找    -type ：按照文件类型查找2、支持逻辑表达式    -a：and（与）        #例：find  /  -type  c  -a  -name  vcsa6    -o ：or（或）        #例：find  /aaa  -name  \*.sh  -o  -type  f</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基本命令II</title>
      <link href="/2020/08/01/linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4II/"/>
      <url>/2020/08/01/linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4II/</url>
      
        <content type="html"><![CDATA[<h1 id="一、cat命令"><a href="#一、cat命令" class="headerlink" title="一、cat命令"></a>一、cat命令</h1><h2 id="1-cat用途"><a href="#1-cat用途" class="headerlink" title="1.cat用途"></a>1.cat用途</h2><p>​        显示文件内容</p><pre><code>[root@desktop ~]# cat a.txt        #查看a.txt文件内容[root@desktop ~]# cat /proc/uptime        #查看开机时间18256.04    18160.06        #第一个值表示系统从开机到现在运行时间（s)，第二个值表示系统开机后空闲时间（s）,系统空闲比=第二个值/第一个值</code></pre><h2 id="2-命令格式"><a href="#2-命令格式" class="headerlink" title="2.命令格式"></a>2.命令格式</h2><p>​        cat [选项] 文件名</p><pre><code>[root@desktop ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0         #查看网络配置文件</code></pre><h2 id="3-常用选项"><a href="#3-常用选项" class="headerlink" title="3.常用选项"></a>3.常用选项</h2><ol><li>-b：非空行加上序号</li><li>-A：show all  ==-vET</li><li>-v：–show-nonprinting，使用^和M-引用，除LFD和TAB</li><li>-E：–show-ends，在每行结束处显示“$”</li><li>-T：–show-tabs，将跳格字符显示为^I</li></ol><h1 id="二、tac命令"><a href="#二、tac命令" class="headerlink" title="二、tac命令"></a>二、tac命令</h1><h2 id="1-tac用途"><a href="#1-tac用途" class="headerlink" title="1.tac用途"></a>1.tac用途</h2><p>​        倒叙浏览，适用于查看系统日志等按时间更新的文件</p><h2 id="2-命令格式-1"><a href="#2-命令格式-1" class="headerlink" title="2.命令格式"></a>2.命令格式</h2><p>​        tac [选项] 文件名</p><pre><code>[root@desktop ~]# tac /etc/sysconfig/network-scripts/ifcfg-eth0     #倒序浏览网络配置文件</code></pre><h2 id="3-常用选项-1"><a href="#3-常用选项-1" class="headerlink" title="3.常用选项"></a>3.常用选项</h2><ol><li>-b：before 在行前而非行尾添加分隔标志</li><li>-r：regex 将分隔标志视作正则表达式来解析</li><li>-s：separator 使用指定字符串代替换行符做分隔标志</li></ol><h1 id="三、more-amp-less命令"><a href="#三、more-amp-less命令" class="headerlink" title="三、more&amp;less命令"></a>三、more&amp;less命令</h1><h2 id="1-more用途"><a href="#1-more用途" class="headerlink" title="1.more用途"></a>1.more用途</h2><p>​        全屏方式分页显示文件内容</p><h2 id="2-more命令格式"><a href="#2-more命令格式" class="headerlink" title="2.more命令格式"></a>2.more命令格式</h2><p>​        more  [选项] 文件名</p><pre><code>[root@desktop ~]# more /var/log/dmesg        #查看dmesg日志文件</code></pre><h2 id="3-more操作方法"><a href="#3-more操作方法" class="headerlink" title="3.more操作方法"></a>3.more操作方法</h2><ol><li>enter：向下逐行滚动</li><li>space：向下逐页翻动</li><li>q：退出</li></ol><h2 id="4-less用途"><a href="#4-less用途" class="headerlink" title="4.less用途"></a>4.less用途</h2><p>​        与more功能相同，但扩展功能更多</p><h2 id="5-less命令格式"><a href="#5-less命令格式" class="headerlink" title="5.less命令格式"></a>5.less命令格式</h2><p>​        less [选项] 文件名</p><pre><code>[root@desktop ~]# less /var/log/dmesg</code></pre><h2 id="6-less操作方法"><a href="#6-less操作方法" class="headerlink" title="6.less操作方法"></a>6.less操作方法</h2><ol><li>PgUP ：上翻页</li><li>PgDn ：下翻页</li><li>‘/’键查找内容，‘n’下一个内容，‘N’上一个内容</li></ol><h1 id="四、head-amp-tail-命令"><a href="#四、head-amp-tail-命令" class="headerlink" title="四、head&amp;tail 命令"></a>四、head&amp;tail 命令</h1><h2 id="1、head"><a href="#1、head" class="headerlink" title="1、head"></a>1、head</h2><p>head：查看文件开头的前十行（默认）</p><pre><code>[root@desktop ~]# head /var/log/dmesg      #显示dmesg文件的前十行</code></pre><p>选项：-n ：n代表行数</p><pre><code>[root@desktop ~]# head -11 /var/log/dmesg        #显示dmesg文件的前11行</code></pre><h2 id="2、tail"><a href="#2、tail" class="headerlink" title="2、tail"></a>2、tail</h2><p>tail：查看文件末尾的后十行（默认）</p><pre><code>[root@desktop ~]# tail /var/log/dmesg                   #显示dmesg文件的后十行</code></pre><p>选项：</p><ol><li><p>-n：n代表行数</p><pre><code>[root@desktop ~]# tail -11 /var/log/dmesg  #显示dmesg文件的后11行</code></pre></li><li><p>-f ：跟踪文件末尾的内容变化，实时显示更新的内容</p></li></ol><h1 id="五、wc命令"><a href="#五、wc命令" class="headerlink" title="五、wc命令"></a>五、wc命令</h1><h2 id="1-wc（Word-count）"><a href="#1-wc（Word-count）" class="headerlink" title="1.wc（Word count）"></a>1.wc（Word count）</h2><p>​        统计文件中单词数量等信息，输出结果依次为行数、单词数、字符数、文件名</p><h2 id="2-命令格式-2"><a href="#2-命令格式-2" class="headerlink" title="2.命令格式"></a>2.命令格式</h2><p>​        wc [选项] 目标文件</p><h2 id="3-选项"><a href="#3-选项" class="headerlink" title="3.选项"></a>3.选项</h2><ol><li>-l：line 统计行数</li><li>-w：Word 统计单词个数</li><li>-c：统计字节</li></ol><h1 id="六、grep命令"><a href="#六、grep命令" class="headerlink" title="六、grep命令"></a>六、grep命令</h1><h2 id="1-grep"><a href="#1-grep" class="headerlink" title="1.grep"></a>1.grep</h2><p>​        检索和过滤文件内容，在文件中查找显示包含指定字符串的行</p><h2 id="2-命令格式-3"><a href="#2-命令格式-3" class="headerlink" title="2.命令格式"></a>2.命令格式</h2><p>​        grep [选项] 查找条件 目标文件</p><pre><code>[root@desktop ~]# grep -v &quot;^#&quot; /etc/httpd/conf/httpd.conf     #在httpd.conf文件中查找除了#开头的行</code></pre><h2 id="3-常用选项-2"><a href="#3-常用选项-2" class="headerlink" title="3.常用选项"></a>3.常用选项</h2><ol><li>-i：查找时忽略大小写</li><li>-v：反转查找，取反，输出与查询条件不相符的行</li></ol><h2 id="4-查找条件"><a href="#4-查找条件" class="headerlink" title="4.查找条件"></a>4.查找条件</h2><p>​        要查找的字符串以英文双引号括起来</p><ol><li>”^..”：表示以”..”开头</li><li>“..$”：表示以”..”结尾</li><li>“^$”：表示空行</li></ol><h1 id="七、压缩-amp-解压"><a href="#七、压缩-amp-解压" class="headerlink" title="七、压缩&amp;解压"></a>七、压缩&amp;解压</h1><h2 id="1-gzip命令"><a href="#1-gzip命令" class="headerlink" title="1.gzip命令"></a>1.gzip命令</h2><p>1.1.gzip：用于制作压缩文件，解开压缩文件（不保留原文件）</p><p>1.2.选项：</p><p>​        -9 ：表示高压缩比，用在创建压缩文件时使用</p><p>​        -d ：用于解压压缩文件</p><p>1.3.压缩：gzip  -9 文件名</p><p>1.4.解压缩：gzip -d .gz格式的压缩文件</p><h2 id="2-bzip2命令"><a href="#2-bzip2命令" class="headerlink" title="2.bzip2命令"></a>2.bzip2命令</h2><p>2.1.bzip2：用于制作压缩文件，解开压缩文件，压缩效率更高（不保留原文件）</p><p>2.2.选项：</p><p>​        -9 ：表示高压缩比，用在创建压缩文件时使用</p><p>​        -d ：用于解压压缩文件</p><p>2.3.压缩：bzip2 -9 文件名</p><p>2.4.解压缩：bzip2 -d .bz格式的压缩文件</p><h2 id="3-tar命令"><a href="#3-tar命令" class="headerlink" title="3.tar命令"></a>3.tar命令</h2><p>3.1.tar：制作归档文件，释放归档文件，用来压缩文件夹（打包）（保留原文件）</p><p>3.2.打包：tar  [选项] 归档文件名 源文件或目标文件</p><pre><code>[root@desktop ~]# tar -czf 1.txt.tar.gz 1.txt        #将1.txt文件打包成1.txt.tar.gz压缩文件</code></pre><p>3.3.解包：tar  [选项] 归档文件名 [-C 目标目录]</p><pre><code>[root@desktop ~]# tar -zxf 1.txt.tar.gz -C /aaa    #将1.txt.tar.gz文件解压到aaa文件夹下</code></pre><p>3.4选项</p><ol><li>-c ：create 创建.tar格式的包</li><li>-x ：解开.tar格式的包</li><li>-v ：输出过程</li><li>-f ：表示使用归档文件（使用其它选项时必须加上-f选项连用）</li><li>-p ：打包时保留原始文件及目录权限</li><li>-t ：列表查看包内的文件</li><li>-C ：解包时指定释放的目标文件夹</li><li>-z ：调用gzip程序进行压缩或解压</li><li>-j ：调用bzip2程序进行压缩或解压</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim基本使用</title>
      <link href="/2020/08/01/linux/vim%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/08/01/linux/vim%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1、什么是vi编辑器"><a href="#1、什么是vi编辑器" class="headerlink" title="1、什么是vi编辑器"></a>1、什么是vi编辑器</h2><h1 id="一、什么是vi编辑器"><a href="#一、什么是vi编辑器" class="headerlink" title="一、什么是vi编辑器"></a>一、什么是vi编辑器</h1><p>Vi编辑器用来创建或修改文本文件，是Linux系统中的各种配置文件的主要修改工具</p><p>Vim：是vi编辑器的增强版本，有颜色区分</p><h1 id="二、vi编辑器的三种工作模式"><a href="#二、vi编辑器的三种工作模式" class="headerlink" title="二、vi编辑器的三种工作模式"></a>二、vi编辑器的三种工作模式</h1><p>1、命令模式</p><p>2、输入模式</p><p>3、末行模式</p><p>三种工作模式之间的关系：</p><p>命令模式——键入（a\i\o）——输入模式——键入（esc）——命令模式</p><p>命令模式——键入（:）——末行模式——键入（esc）——命令模式</p><h1 id="三、命令模式下的操作"><a href="#三、命令模式下的操作" class="headerlink" title="三、命令模式下的操作"></a>三、命令模式下的操作</h1><h2 id="1、光标移动"><a href="#1、光标移动" class="headerlink" title="1、光标移动"></a>1、光标移动</h2><p>上下左右</p><h2 id="2、翻页"><a href="#2、翻页" class="headerlink" title="2、翻页"></a>2、翻页</h2><p>上一页：PgUp/Ctrl + b</p><p>下一页：PgDn/Ctrl + f</p><h2 id="3、行内快速跳转"><a href="#3、行内快速跳转" class="headerlink" title="3、行内快速跳转"></a>3、行内快速跳转</h2><p>跳转至行首：Home / “^” /”0”（零）</p><p>跳转至行末：End / “$”</p><h2 id="4、行间快速跳转"><a href="#4、行间快速跳转" class="headerlink" title="4、行间快速跳转"></a>4、行间快速跳转</h2><p>1G / gg：回到行首</p><p>G：转至最后一行</p><p>#G：跳转到文件中的第#行</p><h2 id="5、行号显示"><a href="#5、行号显示" class="headerlink" title="5、行号显示"></a>5、行号显示</h2><p>:set nu               #显示行号                                       </p><p>:set nonu         #取消行号显示       </p><h2 id="6、删除"><a href="#6、删除" class="headerlink" title="6、删除"></a>6、删除</h2><p>X或del ：删除光标所在的单个字符</p><p>dd ：删除光标所在行</p><p>#dd ：删除从光标开始的#行</p><p>d^ ：删除从光标开始到行首的所有内容（不包括光标所在字符）</p><p>d$ ：删除从光标开始到行末的所有内容（不包括光标所在字符）</p><h2 id="7、复制"><a href="#7、复制" class="headerlink" title="7、复制"></a>7、复制</h2><p>yy ：复制整行内容</p><p>#yy ：复制从光标开始的#行</p><h2 id="8、粘贴"><a href="#8、粘贴" class="headerlink" title="8、粘贴"></a>8、粘贴</h2><p>P(大写) ：粘贴内容到光标之前</p><p>p(小写) ：粘贴内容到光标之后</p><h2 id="9、内容查找"><a href="#9、内容查找" class="headerlink" title="9、内容查找"></a>9、内容查找</h2><p>/word ：从上到下查找字符（串）word</p><p>?word ：从下到上查找字符（串）word</p><p>n ：下一个</p><p>N ：上一个</p><h2 id="10、撤销编辑"><a href="#10、撤销编辑" class="headerlink" title="10、撤销编辑"></a>10、撤销编辑</h2><p>u ：按一次取消最近一次的操作，多次重复按u键，回复已经进行多次的操作</p><p>U ：用于取消当前行所有的编辑</p><p>ZZ ：保存当前文件内容并退出vi编辑器</p><h1 id="四、末行模式下的操作"><a href="#四、末行模式下的操作" class="headerlink" title="四、末行模式下的操作"></a>四、末行模式下的操作</h1><h3 id="1、保存及退出"><a href="#1、保存及退出" class="headerlink" title="1、保存及退出"></a>1、保存及退出</h3><p>​         保存文件：</p><p>​                   :w                      #保存修改的内容</p><p>​                   :w /a.txt            #另存为</p><p>​         退出：</p><p>​                   :q                        #未修改退出</p><p>​                   :q!                     #放弃对文件的修改，并退出</p><h3 id="2、保存退出"><a href="#2、保存退出" class="headerlink" title="2、保存退出"></a>2、保存退出</h3><p>​         :wq            #保存并退出</p><p>​         </p><h3 id="3、打开新文件或读入其他文件内容"><a href="#3、打开新文件或读入其他文件内容" class="headerlink" title="3、打开新文件或读入其他文件内容"></a>3、打开新文件或读入其他文件内容</h3><p>​         :e 文件   #读入该文件内容</p><p>​         :r 文件    #在当前文件中光标所在行后读入其他文件的内容</p><h3 id="4、文件内容的替换"><a href="#4、文件内容的替换" class="headerlink" title="4、文件内容的替换"></a>4、文件内容的替换</h3><p>​         1、:s /old/new                 #在当前行中用new替换第一个old</p><p>​         2、:s /old/new/g              #替换当前行中所有的old为new</p><p>​         3、:#1,#2 s /old/new/g   #在行号#1到#2中，替换所有的old为new</p><p>​         4、:%s /old/new/g           #在整个文件范围内替换old为new</p><p>​         5、:s /old/new/c               #每个替换动作都会提醒用户确认</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程管理及任务调度</title>
      <link href="/2020/08/01/linux/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%8F%8A%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/"/>
      <url>/2020/08/01/linux/%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%8F%8A%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="一、进程管理"><a href="#一、进程管理" class="headerlink" title="一、进程管理"></a>一、进程管理</h1><h2 id="1、程序和进程关系"><a href="#1、程序和进程关系" class="headerlink" title="1、程序和进程关系"></a>1、程序和进程关系</h2><p>程序：保存在硬盘光盘等存储介质中可执行的代码和数据，静态保存的代码</p><p>进程：在cpu及内存中运行的程序代码，动态执行的代码。</p><p>​                   父进程，子进程：每个进程可以创建一个或多个进程。</p><h2 id="2、ps查看进程信息"><a href="#2、ps查看进程信息" class="headerlink" title="2、ps查看进程信息"></a>2、ps查看进程信息</h2><p>用途：查看静态的进程统计信息</p><p>常用命令1：ps aux</p><p>​    a: 当前终端所有进程</p><p>​    u：以用户格式输出</p><p>​    x: 当前用户所有终端                                                          </p><p>常用命令2：ps -elf</p><p>​    -e:系统内所有</p><p>​    -l:使用长格式</p><p>​    -f:使用完整的格式显示         </p><h2 id="3、top查看动态的进程排名信息"><a href="#3、top查看动态的进程排名信息" class="headerlink" title="3、top查看动态的进程排名信息"></a>3、top查看动态的进程排名信息</h2><p>​           </p><p>按P:根据cpu占用情况对进程进行排序</p><p>按M:同上</p><p>按N:根据启动时间进行排序</p><p>按h:(help)弹出top帮助信息</p><h2 id="4、pgrep根据特定条件查询进程PID信息"><a href="#4、pgrep根据特定条件查询进程PID信息" class="headerlink" title="4、pgrep根据特定条件查询进程PID信息"></a>4、pgrep根据特定条件查询进程PID信息</h2><p>-l：显示进程名</p><p>-U: 指定特定帐号</p><p>-t: 指定终端</p><pre><code>ex：pgrep -U root -t tty1 -l</code></pre><p>​           </p><h2 id="5、pstree以树形结构列出进程信息"><a href="#5、pstree以树形结构列出进程信息" class="headerlink" title="5、pstree以树形结构列出进程信息"></a>5、pstree以树形结构列出进程信息</h2><p>-a:显示完整信息                                                                                                       </p><p>-u:列出对应的用户名</p><p>-p:列出对应的pid</p><pre><code>ex：pstree -u root -a           </code></pre><h2 id="6、进程的启动方式"><a href="#6、进程的启动方式" class="headerlink" title="6、进程的启动方式"></a>6、进程的启动方式</h2><p>前台启动：用户输入命令，直接执行程序</p><p>后台启动：在命令尾加&amp;符号</p><p>​         </p><h2 id="7、进程的前后台调度"><a href="#7、进程的前后台调度" class="headerlink" title="7、进程的前后台调度"></a>7、进程的前后台调度</h2><p>command &amp;     #后台执行command</p><p>jobs                    #显示后台运行的进程</p><p>fg 1                     #fg 将后台运行的进程调度到前台，后面跟进程序列号</p><p>ctrl+Z                 #将前台任务挂起，即调入后台并停止执行。</p><p>ctrl+c                 #取消前台运行的任务</p><h2 id="8、终止进程"><a href="#8、终止进程" class="headerlink" title="8、终止进程"></a>8、终止进程</h2><p>kill:用于终止指定PID号的进程（-9：强制终止）</p><p>killall:用于终止指定名称的所有进程（-9：强制终止）</p><p>pkill:根据特定条件终止相应进程</p><p>常用命令选项：</p><p>​    -U：根据进程所属的用户名终止相应进程</p><p>​    -t: 根据进程所在的终端终止相应的进程</p><h1 id="二、计划任务"><a href="#二、计划任务" class="headerlink" title="二、计划任务"></a>二、计划任务</h1><h2 id="1、at命令：一次性计划脚本"><a href="#1、at命令：一次性计划脚本" class="headerlink" title="1、at命令：一次性计划脚本"></a>1、at命令：一次性计划脚本</h2><p>服务脚本名称：/etc/init.d/atd</p><p>设置格式：at [HH:MM] [yyyy-mm-dd]</p><p>注：命令最好写绝对路径</p><p>Ctrl+D 提交</p><p>at -d ID     #删除指定的at任务，ID为at任务的标志号  </p><h2 id="2、atq-查看计划任务队列"><a href="#2、atq-查看计划任务队列" class="headerlink" title="2、atq:查看计划任务队列"></a>2、atq:查看计划任务队列</h2><p>​           </p><h2 id="3、atrm-删除计划任务"><a href="#3、atrm-删除计划任务" class="headerlink" title="3、atrm:删除计划任务"></a>3、atrm:删除计划任务</h2><p>​           </p><h2 id="4、计划任务crond"><a href="#4、计划任务crond" class="headerlink" title="4、计划任务crond"></a>4、计划任务crond</h2><p>crontab命令：按照预先设置的时间周期(分钟，小时，天，星期，月)重复执行用户指定的命令操作，属于周期性计划任务</p><p>服务脚本名称 /etc/init.d/crond</p><p>全局配置文件 /etc/crontab</p><p>cat /etc/crontab</p><p><img src="C:%5CUsers%5CZF%5CDesktop%5CBolg%5Cthemes%5Cnext%5Csource%5Cimages%5Cimages%5C12.png" alt="">       </p><p>corntab参数：</p><pre><code>    分钟：0-59整数    小时：0-23整数    日期：1-31整数    月份：1-12整数    星期：0-7，0&amp;7表示周日    命令：要执行的命令或脚本，最好用绝对路径</code></pre><p>crontab时间数值的特殊表示方法：</p><ol><li><ul><li>表示该范围内的任意时间</li></ul></li><li>, 表示间隔的多个不连续的时间点</li><li>- 表示一个连续的时间范围</li><li>/ 指定间隔的时间频率</li></ol><p>系统默认的设置 /etc/cron.*/</p><p>用户定义设置 /var/spool/cron/用户名</p><pre><code>cat /var/spool/cron/zs              #查看用户定义的任务</code></pre><p>​       </p><p>管理计划任务</p><p>编辑计划任务：crontab -e [-u 用户]</p><p>查看计划任务：crontab -l [ -u 用户名 ]</p><p>删除计划任务：crontab -r [ -u 用户名 ]</p><p>​          </p><p>注意：root用户可以管理制定用户的计划任务，普通用户只能管理自己的计划任务。</p><p>例：用户zs每周日晚上23:55 ,将/etc/passwd 文件的内容复制到宿主目录中，保存为pwd.txt文件</p><pre><code>crontab -e -u zs 55 23 * * * 0 /bin/cp -r /etc/passwd /home/zs/pwd.txt 或55 23 * * * 7 /bin/cp -r /etc/passwd /home/zs/pwd.txt</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="/2020/08/01/others/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/08/01/others/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><p>标题的使用格式，使用（井号键加空格键表示）共有六个等级</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 一级标题，快捷键：ctrl+1</span><span class="token comment" spellcheck="true">## 二级标题，快捷键：ctrl+2</span><span class="token comment" spellcheck="true">### 三级标题，快捷键：ctrl+3</span><span class="token comment" spellcheck="true">#### 四级标题，快捷键：ctrl+4</span><span class="token comment" spellcheck="true">##### 五级标题，快捷键：ctrl+5</span><span class="token comment" spellcheck="true">###### 六级标题，快捷键：ctrl+6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、文本内容"><a href="#二、文本内容" class="headerlink" title="二、文本内容"></a>二、文本内容</h2><h4 id="1、文本居中"><a href="#1、文本居中" class="headerlink" title="1、文本居中"></a>1、文本居中</h4><p>\&lt;center&gt;这里居中显示\&lt;/center&gt;</p><pre class="line-numbers language-python"><code class="language-python">\<span class="token operator">&lt;</span>center\<span class="token operator">></span>居中显示的内容\<span class="token operator">&lt;</span><span class="token operator">/</span>center\<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：Typora目前并不会直接预览剧中效果，相应的效果只有输出文本的时候才会显现</p><h4 id="2、下划线"><a href="#2、下划线" class="headerlink" title="2、下划线"></a>2、下划线</h4><p><u>这是下划线</u></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">&lt;</span>u<span class="token operator">></span>下划线显示的内容<span class="token operator">&lt;</span>\u<span class="token operator">></span> 快捷键：ctrl<span class="token operator">+</span>u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3、删除线"><a href="#3、删除线" class="headerlink" title="3、删除线"></a>3、删除线</h4><p><del>这是删除线效果</del></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">~</span><span class="token operator">~</span>删除线的内容<span class="token operator">~</span><span class="token operator">~</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4、字体加粗"><a href="#4、字体加粗" class="headerlink" title="4、字体加粗"></a>4、字体加粗</h4><p><strong>这里是字体加粗的展示</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">**</span>需要加粗的内容<span class="token operator">**</span> 或者快捷键：ctrl<span class="token operator">+</span>B<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5、字体倾斜"><a href="#5、字体倾斜" class="headerlink" title="5、字体倾斜"></a>5、字体倾斜</h4><p><em>这里是字体倾斜的展示</em></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">*</span>需要倾斜的内容<span class="token operator">*</span> 或者快捷键：ctrl<span class="token operator">+</span>I<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6、水平分割线"><a href="#6、水平分割线" class="headerlink" title="6、水平分割线"></a>6、水平分割线</h4><hr><pre class="line-numbers language-python"><code class="language-python">使用方式：<span class="token operator">**</span><span class="token operator">*</span>或者<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="7、引用"><a href="#7、引用" class="headerlink" title="7、引用"></a>7、引用</h4><p>使用&gt;+空格实现</p><blockquote><p>祸兮福之所依，福兮祸之所伏！</p><p>​                            ——《老子》第五十八章</p></blockquote><h4 id="8、注释"><a href="#8、注释" class="headerlink" title="8、注释"></a>8、注释</h4><p>[^注释内容]</p><h2 id="三、超链接"><a href="#三、超链接" class="headerlink" title="三、超链接"></a>三、超链接</h2><h4 id="1、图片超链接"><a href="#1、图片超链接" class="headerlink" title="1、图片超链接"></a>1、图片超链接</h4><img src="E:\Python\basic\1.jpg" style="zoom:100%"><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"图片路径"</span> style<span class="token operator">=</span><span class="token string">"zoom:50%;"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">#50%表示图片大小缩放</span>或者：!<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>E<span class="token punctuation">:</span>\Python\basic\<span class="token number">7.</span>jpg<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#该方式不支持缩放</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="E:%5CPython%5Cbasic%5C7.jpg" alt="1"></p><p>当然也可以直接拖拽<img src="E:%5CPython%5Cbasic%5C2.jpg" alt="    "></p><h4 id="2、网页超链接"><a href="#2、网页超链接" class="headerlink" title="2、网页超链接"></a>2、网页超链接</h4><p><a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a></p><p><a href="http://www.google.com" target="_blank" rel="noopener">google</a></p><pre class="line-numbers language-python"><code class="language-python">第一种：<span class="token operator">&lt;</span>http开头的网页<span class="token operator">></span>第二种：快捷键ctrl<span class="token operator">+</span>K第三种：<span class="token punctuation">[</span>自定义内容<span class="token punctuation">]</span><span class="token punctuation">(</span>网址<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>网页超链接可以通过按住Ctrl键单击访问</p><h4 id="3、代码块"><a href="#3、代码块" class="headerlink" title="3、代码块"></a>3、代码块</h4><p>Typora支持多种语言的代码块进行语法高亮，这些语言几乎涵盖了绝大部分经常使用的计算机编程语言</p><pre class="line-numbers language-python"><code class="language-python">使用方法：```编程语言<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="四、其他"><a href="#四、其他" class="headerlink" title="四、其他"></a>四、其他</h2><h4 id="1、表格"><a href="#1、表格" class="headerlink" title="1、表格"></a>1、表格</h4><p>第一种：使用快捷键ctrl+T，会自动弹出设置行和列的设置框</p><p>第二种：</p><table><thead><tr><th>国家</th><th>省份</th><th>市区</th></tr></thead><tbody><tr><td>CN</td><td>SC</td><td>CD</td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">|</span>国家<span class="token operator">|</span>省份<span class="token operator">|</span>市区<span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2、任务列表（复选框，可选）"><a href="#2、任务列表（复选框，可选）" class="headerlink" title="2、任务列表（复选框，可选）"></a>2、任务列表（复选框，可选）</h4><ul><li><input checked="" disabled="" type="checkbox"> <p>python</p></li><li><input disabled="" type="checkbox"> <p>Java</p></li></ul><pre class="line-numbers language-python"><code class="language-python">语法：<span class="token operator">-</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span> 文字        （注：每两个字符之间都有空格）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3、列表"><a href="#3、列表" class="headerlink" title="3、列表"></a>3、列表</h4><p>使用+、-、* 加空格创建无序列表，任意数字开始+空格创建有序列表</p><ul><li>Python</li><li>Java</li></ul><h4 id="4、表情"><a href="#4、表情" class="headerlink" title="4、表情"></a>4、表情</h4><p>:smile:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">:</span>单词<span class="token punctuation">:</span>        <span class="token punctuation">(</span>注：单词前后都有英文冒号<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5、快捷键"><a href="#5、快捷键" class="headerlink" title="5、快捷键"></a>5、快捷键</h4><table><thead><tr><th>快捷键</th><th>作用</th><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>ctrl+1</td><td>一级标题</td><td>ctrl+B</td><td>字体加粗</td></tr><tr><td>ctrl+1</td><td>二级标题</td><td>ctrl+I</td><td>字体倾斜</td></tr><tr><td>ctrl+3</td><td>三级标题</td><td>ctrl+U</td><td>下划线</td></tr><tr><td>ctrl+4</td><td>四级标题</td><td>ctrl+Home</td><td>返回顶部</td></tr><tr><td>ctrl+5</td><td>五级标题</td><td>ctrl+End</td><td>返回底部</td></tr><tr><td>ctrl+6</td><td>六级标题</td><td>ctrl+T</td><td>创建表格</td></tr><tr><td>ctrl+L</td><td>选中某句话</td><td>ctrl+K</td><td>创建超链接</td></tr><tr><td>ctrl+D</td><td>选中某个单词</td><td>ctrl+F</td><td>搜索</td></tr><tr><td>ctrl+E</td><td>选中相同格式的文字</td><td>ctrl+H</td><td>搜索并替换</td></tr><tr><td>alt+shift+5</td><td>删除线</td><td>ctrl+Shift+I</td><td>插入图片</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>random模块</title>
      <link href="/2020/08/01/python/random%E6%A8%A1%E5%9D%97/"/>
      <url>/2020/08/01/python/random%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="random模块"><a href="#random模块" class="headerlink" title="random模块"></a>random模块</h1><h2 id="randint-方法"><a href="#randint-方法" class="headerlink" title="randint()方法"></a>randint()方法</h2><p>randint方法用来生成一个指定范围内的随机整数</p><p>用法：randint(start,end)，取值范围[start:end]</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="sample-方法"><a href="#sample-方法" class="headerlink" title="sample()方法"></a>sample()方法</h2><p>sample方法用来抽样，从指定样本中抽取指定数目的样本</p><p>用法：sample(Iterable,num)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#随机生成100个样本</span><span class="token operator">>></span><span class="token operator">></span> lst <span class="token operator">=</span> <span class="token punctuation">[</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#抽样10个</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>lst<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="shuffle-方法"><a href="#shuffle-方法" class="headerlink" title="shuffle()方法"></a>shuffle()方法</h2><p>使用shuffle方法来重洗数据集，值得注意的是“shuffle”是对<strong>lst</strong>就地洗牌，节省存储空间</p><p>用法：shuffle(Iterable)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> lst <span class="token operator">=</span> <span class="token punctuation">[</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> shuffle<span class="token punctuation">(</span>lst<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#冲洗数据集</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="uniform-方法"><a href="#uniform-方法" class="headerlink" title="uniform()方法"></a>uniform()方法</h2><p>uniform方法生成指定范围内的一个随机16位浮点数，如下生成两对均匀分布的二维坐标点</p><p>用法：uniform(start,end)，取值范围[start:end)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">5.846067283306517</span><span class="token punctuation">,</span> <span class="token number">0.3220977673858716</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token number">8.795611799349297</span><span class="token punctuation">,</span> <span class="token number">5.844042941914149</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关键字global和nonlocal的用法</title>
      <link href="/2020/08/01/python/%E5%85%B3%E9%94%AE%E5%AD%97global%E5%92%8Cnonlocal%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2020/08/01/python/%E5%85%B3%E9%94%AE%E5%AD%97global%E5%92%8Cnonlocal%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="关键字global和nonlocal的用法"><a href="#关键字global和nonlocal的用法" class="headerlink" title="关键字global和nonlocal的用法"></a>关键字global和nonlocal的用法</h1><h2 id="一、-global"><a href="#一、-global" class="headerlink" title="一、 global"></a>一、 global</h2><p>​        global关键字用来在函数或其他局部作用域中修改全局变量</p><h4 id="1-1-在不使用global关键字的情况下对全局变量进行修改"><a href="#1-1-在不使用global关键字的情况下对全局变量进行修改" class="headerlink" title="1.1 在不使用global关键字的情况下对全局变量进行修改"></a>1.1 在不使用global关键字的情况下对全局变量进行修改</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">global_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    count <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> global_test<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        上述代码块运行时会出现如下错误：</p><p><code>UnboundLocalError: local variable &#39;count&#39; referenced before assignment</code></p><h4 id="1-2-如果局部要对全局变量进行修改，应该在局部中声明全局变量"><a href="#1-2-如果局部要对全局变量进行修改，应该在局部中声明全局变量" class="headerlink" title="1.2 如果局部要对全局变量进行修改，应该在局部中声明全局变量"></a>1.2 如果局部要对全局变量进行修改，应该在局部中声明全局变量</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">global_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> count    count <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> global_test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        以上输出结果为1</p><h4 id="1-3-在不修改全局变量的情况下，局部可访问全局变量"><a href="#1-3-在不修改全局变量的情况下，局部可访问全局变量" class="headerlink" title="1.3 在不修改全局变量的情况下，局部可访问全局变量"></a>1.3 在不修改全局变量的情况下，局部可访问全局变量</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">global_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> global_test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、nonlocal"><a href="#二、nonlocal" class="headerlink" title="二、nonlocal"></a>二、nonlocal</h2><p>​        nonlocal关键字声明的变量既不是局部变量也不是全局变量，而是外部嵌套函数内的变量。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">nonlocal_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">def</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        nonlocal count        count <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">return</span> count    <span class="token keyword">return</span> test2<span class="token operator">>></span><span class="token operator">></span> var <span class="token operator">=</span> nonlocal_test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python关键字 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换机基本命令</title>
      <link href="/2020/08/01/switch/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/08/01/switch/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="交换机基本命令"><a href="#交换机基本命令" class="headerlink" title="交换机基本命令"></a>交换机基本命令</h1><h2 id="1-1：CLI模式"><a href="#1-1：CLI模式" class="headerlink" title="1.1：CLI模式"></a>1.1：CLI模式</h2><pre><code>Switch&gt;          #用户模式Switch&gt;enableSwitch#          #特权模式Switch#configure terminal Switch(config)#         #配置模式 (对配置文件的增删改Switch#show running-config）Switch(config)#interface f0/1Switch(config-if)#            #接口模式Switch(config)#exit              #一步一步退Switch(config-if)#end                 #退到（Switch#特权模式）</code></pre><h2 id="1-2：show命令"><a href="#1-2：show命令" class="headerlink" title="1.2：show命令"></a>1.2：show命令</h2><p>​        show命令用来在特权模式下查看系统信息</p><pre><code>Switch# show version     #查看版本等信息C2960-LANBASEK9-M硬件、Version 12.2、9C:AF:CA:E1:68:00Switch# show buffer     #详细输出buffer的名称和尺寸，缓存分为读取缓存和写入缓存 （buffer)Switch# show memory        #用于测试内存问题Switch# show processes cpu        #查看CPU使用率和当前进程Switch# show processes memory    #查看内存的进程和内存使用情况</code></pre><h2 id="1-3：配置文件"><a href="#1-3：配置文件" class="headerlink" title="1.3：配置文件"></a>1.3：配置文件</h2><p>​        交换机有两个配置文件，分别是：startup-config配置文件和running-config配置文件，需要注意的是startup-config存在于硬盘上，断电后不会丢失；而running-config存在于内存中，断电后会丢失</p><pre><code>Switch# copy running-config startup-config        #等价于保存当前配置Switch# write        #保存当前配置</code></pre><h2 id="1-4：交换机接口"><a href="#1-4：交换机接口" class="headerlink" title="1.4：交换机接口"></a>1.4：交换机接口</h2><pre><code>Switch# show ip interface brief        #查看交换机的所有接口信息Ethernet0/1        #10M FastEthernet0/1     #100MGigabitEthernet0/1      #1000M光纤口Switch# show interface f0/1            #查看具体某个接口信息Switch# show arp        #查看ARP信息Switch# show ip traffic        #查看流量信息</code></pre><h2 id="1-5：debug命令"><a href="#1-5：debug命令" class="headerlink" title="1.5：debug命令"></a>1.5：debug命令</h2><p>​        debug命令用于排错，常用于debug all或者debug 具体的技术。当工程师在配置的时候或者设备本身有问题。但是不知道如何排错时—debug，当然还可以通过查看日志来判断</p><pre><code>Switch# undebug  ALL    #关掉所有协议的debug功能---案例：开启关闭arp---Switch# debug arpARP packet debugging is onSwitch# undebug arpARP packet debugging is offSwitch# show logging        #查看日志</code></pre>]]></content>
      
      
      <categories>
          
          <category> Switch基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Switch </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
